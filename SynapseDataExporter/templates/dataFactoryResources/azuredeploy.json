{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "factoryName": {
            "type": "string"
        },
        "location": {
            "type": "string",
            "defaultValue": "eastus"
         },


        "storageAccountName": {
            "type": "string",
            "defaultValue":"storage",
            "metadata": {
                "description": "The storage account name can contain only lowercase letters and numbers. Name must be between 1 and 11 characters"
            }
        },
        
        "sqlDBPoolName": {
            "type": "string",
            "defaultValue": "synapsesqlpool",
            "metadata": {
                "description": "Database name should not match special patterns,The value has a length of at most 115. Database name should not contain reserved words.No database with the same name exists in the server"
            }
        },
        "synapseWorkSpaceName": {
            "type": "string",
            "defaultValue": "testsynapsews",
            "metadata": {
                "description": "Server name must be at least 1 characters and at most 50 characters. Server name must only contain lowercase letters, numbers, and hyphens. The server name must not start or end in a hyphen."
            } 
        },

       "administratorLogin": {
             "type": "string",
             "metadata": {
                 "description": "Your login name must not contain a SQL Identifier or a typical system name (like admin, administrator, sa, root, dbmanager, loginmanager, etc.) or a built-in database user or role (like dbo, guest, public, etc.). "
             }
        },
        "schemaName": {
            "type": "string",
            "defaultValue": "covid",
            "metadata": {
                "description": "Enter the name of schema to extract data"
            }
        },
        "tableName": {
            "type": "string",
            "defaultValue": "covid_british_columbia",
            "metadata": {
                "description": "Enter the name of table to extract data"
            }
         },
        "containerName": {
            "type": "string",
            "defaultValue": "synapsesqlpooldata",
            "metadata": {
                "description": "Enter the name of blob storage container to store the data"
            }
        },
        "datasetName": {
            "type": "string",
            "defaultValue": "covid_british_columbia",
            "metadata": {
                "description": "Enter the dataset name which will be the name of data stored in blob storage container?"
            }
        },
        "logicAppName": {
            "defaultValue": "TeamsNotify",
            "type": "String"
        },
        "keyVaultName": {
            "type": "string",
            "metadata": {
              "description": "Specifies the name of the key vault."
            }
          }
    },
    "variables": {
        "factoryId": "[resourceId('Microsoft.DataFactory/factories/', parameters('factoryName'))]",
        "storageAccountId": "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccountName'))]",
        "fullyQualifiedDomainName": ".sql.azuresynapse.net",
        "keyVaultbaseUrl":"[concat('https://',parameters('keyVaultName'),'.vault.azure.net')]",
        "datasetCsv":"[concat(parameters('datasetName'), '.csv')]",
        "datasetJson":"[concat(parameters('datasetName'), '.json')]",
        "datasetJsonl":"[concat(parameters('datasetName'), '.jsonl')]",
        "datasetParquet":"[concat(parameters('datasetName'), '.parquet')]"

    },
    "resources": [

        {
            "type": "Microsoft.DataFactory/factories",
            "apiVersion": "2018-06-01",
            "name": "[parameters('factoryName')]",
            "location": "[parameters('location')]",
            "properties": {},
            "identity": {
                "type": "SystemAssigned"
            },

            "resources": [
        
  
                    {
                        "name": "[concat(parameters('factoryName'), '/AutoResolveIntegrationRuntime')]",
                        "type": "Microsoft.DataFactory/factories/integrationRuntimes",
                        "apiVersion": "2018-06-01",
                        "properties": {
                            "type": "Managed",
                            "typeProperties": {
                                "computeProperties": {
                                    "location": "AutoResolve",
                                    "dataFlowProperties": {
                                        "computeType": "General",
                                        "coreCount": 8,
                                        "timeToLive": 0
                                    }
                                }
                            }
                        },
                        "dependsOn": [
                            "[parameters('factoryName')]"
                        ]
                    },
                    {
                    "name": "[concat(parameters('factoryName'), '/SynapseDataExporterLinkedService')]",
                    "type": "Microsoft.DataFactory/factories/linkedServices",
                    "apiVersion": "2018-06-01",
                    "properties": {
                        "annotations": [],
                        "type": "AzureKeyVault",
                        "typeProperties": {
                            "baseUrl": "[concat('https://',parameters('keyVaultName'),'.vault.azure.net')]"
                        }
                    },
                    "dependsOn": [
                        "[parameters('factoryName')]",
                         "[concat(variables('factoryId'), '/integrationRuntimes/AutoResolveIntegrationRuntime')]"
                    ]
                },
                    {
                        "name": "[concat(parameters('factoryName'), '/AzureBlobStorageLinkedService')]",
                        "type": "Microsoft.DataFactory/factories/linkedServices",
                        "apiVersion": "2018-06-01",
                        "properties": {
                            "annotations": [],
                            "type": "AzureBlobStorage",
                            "typeProperties": {
                                    "connectionString": {
                                        "type": "AzureKeyVaultSecret",
                                        "store": {
                                            "referenceName": "SynapseDataExporterLinkedService",
                                            "type": "LinkedServiceReference"
                                        },
                                        "secretName": "storageAccountConnectionString"
                                    }
                                },
                            "connectVia": {
                                "referenceName": "AutoResolveIntegrationRuntime",
                                "type": "IntegrationRuntimeReference"
                            }
                        },
                        "dependsOn": [
                            "[parameters('factoryName')]",
                            "[concat(variables('factoryId'), '/integrationRuntimes/AutoResolveIntegrationRuntime')]",
                            "[concat(variables('factoryId'), '/linkedServices/SynapseDataExporterLinkedService')]"
                        ]
                    },

                    {
                            "name": "[concat(parameters('factoryName'), '/AzureSynapseAnalyticsLinkedService')]",
                            "type": "Microsoft.DataFactory/factories/linkedServices",
                            "apiVersion": "2018-06-01",
                            "properties": {
                                "annotations": [],
                                "type": "AzureSqlDW",
                                "typeProperties": {
                                    "connectionString": "[concat('Server=tcp:',parameters('synapseWorkSpaceName'), variables('fullyQualifiedDomainName'),',1433;Initial Catalog=', parameters('sqlDBPoolName'),';User Id=', parameters('administratorLogin'), '@', parameters('synapseWorkSpaceName'), ';Trusted_Connection=False;Encrypt=True;Connection Timeout=30;MultipleActiveResultSets=True')]",
                                    "password": {
                                        "type": "AzureKeyVaultSecret",
                                        "store": {
                                            "referenceName": "SynapseDataExporterLinkedService",
                                            "type": "LinkedServiceReference"
                                        },
                                        "secretName": "synapseAnalyticsLoginPassword"
                                    }
                                },
                                "connectVia": {
                                    "referenceName": "AutoResolveIntegrationRuntime",
                                    "type": "IntegrationRuntimeReference"
                                }
                            },
                            "dependsOn": [
                                "[parameters('factoryName')]",
                                "[concat(variables('factoryId'), '/integrationRuntimes/AutoResolveIntegrationRuntime')]",
                                "[concat(variables('factoryId'), '/linkedServices/SynapseDataExporterLinkedService')]"
                            ]
                     },

                    {
                        "name": "[concat(parameters('factoryName'), '/AzureSynapseAnalyticsTable')]",
                        "type": "Microsoft.DataFactory/factories/datasets",
                        "apiVersion": "2018-06-01",
                        "properties": {
                            "linkedServiceName": {
                                "referenceName": "AzureSynapseAnalyticsLinkedService",
                                "type": "LinkedServiceReference"
                            },
                            "parameters": {
                                "tableName": {
                                    "type": "string"
                                },
                                "schemaName": {
                                    "type": "string"
                                }
                            },
                            "folder": {
                                "name": "SynapseDataset"
                            },
                            "annotations": [],
                            "type": "AzureSqlDWTable",
                            "schema": [],
                            "typeProperties": {
                                "schema": {
                                    "value": "@dataset().schemaName",
                                    "type": "Expression"
                                },
                                "table": {
                                    "value": "@dataset().tableName",
                                    "type": "Expression"
                                }
                            }
                        },
                        "dependsOn": [
                            "[parameters('factoryName')]",
                            "[concat(variables('factoryId'), '/linkedServices/AzureSynapseAnalyticsLinkedService')]"
                        ]
                    },
                    {
                        "name": "[concat(parameters('factoryName'), '/BlobData')]",
                        "type": "Microsoft.DataFactory/factories/datasets",
                        "apiVersion": "2018-06-01",
                        "properties": {
                            "linkedServiceName": {
                                "referenceName": "AzureBlobStorageLinkedService",
                                "type": "LinkedServiceReference"
                            },
                            "parameters": {
                                "containerName": {
                                    "type": "string"
                                },
                                "datasetName": {
                                    "type": "string"
                                }
                            },
                            "folder": {
                                "name": "CsvDataset"
                            },
                            "annotations": [],
                            "type": "DelimitedText",
                            "typeProperties": {
                                "location": {
                                    "type": "AzureBlobStorageLocation",
                                    "fileName": {
                                        "value": "@dataset().datasetName",
                                        "type": "Expression"
                                    },
                                    "container": {
                                        "value": "@dataset().containerName",
                                        "type": "Expression"
                                    }
                                },
                                "columnDelimiter": ",",
                                "escapeChar": "\\",
                                "firstRowAsHeader": true,
                                "quoteChar": "\""
                            },
                            "schema": []
                        },
                        "dependsOn": [
                            "[parameters('factoryName')]",
                            "[concat(variables('factoryId'), '/linkedServices/AzureBlobStorageLinkedService')]"
                        ]
                    },
                    {
                        "name": "[concat(parameters('factoryName'), '/BlobDataParquet')]",
                        "type": "Microsoft.DataFactory/factories/datasets",
                        "apiVersion": "2018-06-01",
                        "properties": {
                            "linkedServiceName": {
                                "referenceName": "AzureBlobStorageLinkedService",
                                "type": "LinkedServiceReference"
                            },
                            "parameters": {
                                "containerName": {
                                    "type": "string"
                                },
                                "datasetName": {
                                    "type": "string"
                                }
                            },
                            "folder": {
                                "name": "ParquetDataset"
                            },
                            "annotations": [],
                            "type": "Parquet",
                            "typeProperties": {
                                "location": {
                                    "type": "AzureBlobStorageLocation",
                                    "fileName": {
                                        "value": "@dataset().datasetName",
                                        "type": "Expression"
                                    },
                                    "container": {
                                        "value": "@dataset().containerName",
                                        "type": "Expression"
                                    }
                                },
                                "compressionCodec": "snappy"
                            },
                            "schema": []
                        },
                        "dependsOn": [
                            "[parameters('factoryName')]",
                            "[concat(variables('factoryId'), '/linkedServices/AzureBlobStorageLinkedService')]"
                        ]
                    },
                    {
                        "name": "[concat(parameters('factoryName'), '/BlobDataJson')]",
                        "type": "Microsoft.DataFactory/factories/datasets",
                        "apiVersion": "2018-06-01",
                        "properties": {
                            "linkedServiceName": {
                                "referenceName": "AzureBlobStorageLinkedService",
                                "type": "LinkedServiceReference"
                            },
                            "parameters": {
                                "containerName": {
                                    "type": "string"
                                },
                                "datasetName": {
                                    "type": "string"
                                }
                            },
                            "folder": {
                                "name": "JsonDataset"
                            },
                            "annotations": [],
                            "type": "Json",
                            "typeProperties": {
                                "location": {
                                    "type": "AzureBlobStorageLocation",
                                    "fileName": {
                                        "value": "@dataset().datasetName",
                                        "type": "Expression"
                                    },
                                    "container": {
                                        "value": "@dataset().containerName",
                                        "type": "Expression"
                                    }
                                }
                            },
                            "schema": {}
                        },
                        "dependsOn": [
                            "[parameters('factoryName')]",
                            "[concat(variables('factoryId'), '/linkedServices/AzureBlobStorageLinkedService')]"
                        ]
                    },
                {
                        "name": "[concat(parameters('factoryName'), '/SynapseToBlobPipelineCsv')]",
                        "type": "Microsoft.DataFactory/factories/pipelines",
                        "apiVersion": "2018-06-01",
                        "properties": {
                            "activities": [
                                {
                                    "name": "SynapseSqlpoolToBlobStorage",
                                    "type": "Copy",
                                    "dependsOn": [],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "source": {
                                            "type": "SqlDWSource",
                                            "queryTimeout": "02:00:00",
                                            "partitionOption": "None"
                                        },
                                        "sink": {
                                            "type": "DelimitedTextSink",
                                            "storeSettings": {
                                                "type": "AzureBlobStorageWriteSettings"
                                            },
                                            "formatSettings": {
                                                "type": "DelimitedTextWriteSettings",
                                                "quoteAllText": true,
                                                "fileExtension": ".txt"
                                            }
                                        },
                                        "enableStaging": true,
                                        "stagingSettings": {
                                            "linkedServiceName": {
                                                "referenceName": "AzureBlobStorageLinkedService",
                                                "type": "LinkedServiceReference"
                                            },
                                            "path": "output"
                                        },
                                        "translator": {
                                            "type": "TabularTranslator",
                                            "typeConversion": true,
                                            "typeConversionSettings": {
                                                "allowDataTruncation": true,
                                                "treatBooleanAsNumber": false
                                            }
                                        }
                                    },
                                    "inputs": [
                                        {
                                            "referenceName": "AzureSynapseAnalyticsTable",
                                            "type": "DatasetReference",
                                            "parameters": {
                                                "tableName": {
                                                    "value": "@pipeline().parameters.tableName",
                                                    "type": "Expression"
                                                },
                                                "schemaName": {
                                                    "value": "@pipeline().parameters.schemaName",
                                                    "type": "Expression"
                                                }
                                            }
                                        }
                                    ],
                                    "outputs": [
                                        {
                                            "referenceName": "BlobData",
                                            "type": "DatasetReference",
                                            "parameters": {
                                                "containerName": {
                                                    "value": "@pipeline().parameters.containerName",
                                                    "type": "Expression"
                                                },
                                                "datasetName": {
                                                    "value": "@pipeline().parameters.datasetName",
                                                    "type": "Expression"
                                                }
                                            }
                                        }
                                    ]
                                },
                                {
                                    "name": "Send file name to applogic",
                                    "type": "WebActivity",
                                    "dependsOn": [
                                        {
                                            "activity": "SynapseSqlpoolToBlobStorage",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "url": "[listCallbackURL(resourceId('Microsoft.Logic/workflows/triggers', parameters('logicAppName'), 'manual'), '2019-05-01').value]",
                                        "connectVia": {
                                            "referenceName": "AutoResolveIntegrationRuntime",
                                            "type": "IntegrationRuntimeReference"
                                        },
                                        "method": "POST",
                                        "headers": {},
                                        "body": {
                                            "value":  "{\n   \"Subject\": \"Data Copied Successfully Alert !\",\n   \"EmailTo\": \"@{pipeline().parameters.EmailTo}\",\n   \"DataFactoryName\": \"@{pipeline().DataFactory}\",\n   \"PipelineName\": \"@{pipeline().Pipeline}\",\n   \"Schema\": \"@{pipeline().parameters.schemaName}\",\n   \"FileNames\": \"@{concat(pipeline().parameters.tableName,'.csv')}\"\n}",
                                            "type": "Expression"
                                        }
                                    }
                                }
                            ],
                            "parameters": {
                                "schemaName": {
                                    "type": "string",
                                    "defaultValue": "[parameters('schemaName')]"
                                },
                                "tableName": {
                                    "type": "string",
                                    "defaultValue": "[parameters('tableName')]"
                                },
                                "containerName": {
                                    "type": "string",
                                    "defaultValue": "[parameters('containerName')]"
                                },
                                "datasetName": {
                                    "type": "string",
                                    "defaultValue": "[variables('datasetCsv')]"
                                },
                                "EmailTo": {
                                    "type": "string",
                                    "defaultValue": ""
                                }
                            },
                            "folder": {
                                "name": "SynapseDataExporter/ExportSingleTableDataToCsv"
                            },
                            "annotations": [],
                            "lastPublishTime": "2021-03-24T10:58:22Z"
                        },
                        "dependsOn": [
                            "[parameters('factoryName')]",
                            "[concat(variables('factoryId'), '/datasets/AzureSynapseAnalyticsTable')]",
                            "[concat(variables('factoryId'), '/datasets/BlobData')]",
                            "[concat(variables('factoryId'), '/integrationRuntimes/AutoResolveIntegrationRuntime')]",
                            "[concat(variables('factoryId'), '/linkedServices/AzureBlobStorageLinkedService')]"
                        ]
                    },
                    {
                        "name": "[concat(parameters('factoryName'), '/SynapseToBlobPipelineJson')]",
                        "type": "Microsoft.DataFactory/factories/pipelines",
                        "apiVersion": "2018-06-01",
                        "properties": {
                            "activities": [
                                {
                                    "name": "SynapseSqlpoolToBlobStorage",
                                    "type": "Copy",
                                    "dependsOn": [],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "source": {
                                            "type": "SqlDWSource",
                                            "queryTimeout": "02:00:00",
                                            "partitionOption": "None"
                                        },
                                        "sink": {
                                            "type": "JsonSink",
                                            "storeSettings": {
                                                "type": "AzureBlobStorageWriteSettings"
                                            },
                                            "formatSettings": {
                                                "type": "JsonWriteSettings"
                                            }
                                        },
                                        "enableStaging": true,
                                        "stagingSettings": {
                                            "linkedServiceName": {
                                                "referenceName": "AzureBlobStorageLinkedService",
                                                "type": "LinkedServiceReference"
                                            },
                                            "path": "output"
                                        },
                                        "translator": {
                                            "type": "TabularTranslator"
                                        }
                                    },
                                    "inputs": [
                                        {
                                            "referenceName": "AzureSynapseAnalyticsTable",
                                            "type": "DatasetReference",
                                            "parameters": {
                                                "tableName": {
                                                    "value": "@pipeline().parameters.tableName",
                                                    "type": "Expression"
                                                },
                                                "schemaName": {
                                                    "value": "@pipeline().parameters.schemaName",
                                                    "type": "Expression"
                                                }
                                            }
                                        }
                                    ],
                                    "outputs": [
                                        {
                                            "referenceName": "BlobDataJson",
                                            "type": "DatasetReference",
                                            "parameters": {
                                                "containerName": {
                                                    "value": "@pipeline().parameters.containerName",
                                                    "type": "Expression"
                                                },
                                                "datasetName": {
                                                    "value": "@pipeline().parameters.datasetName",
                                                    "type": "Expression"
                                                }
                                            }
                                        }
                                    ]
                                },
                                {
                                    "name": "Send file name to applogic",
                                    "type": "WebActivity",
                                    "dependsOn": [
                                        {
                                            "activity": "SynapseSqlpoolToBlobStorage",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "url": "[listCallbackURL(resourceId('Microsoft.Logic/workflows/triggers', parameters('logicAppName'), 'manual'), '2019-05-01').value]",
                                        "connectVia": {
                                            "referenceName": "AutoResolveIntegrationRuntime",
                                            "type": "IntegrationRuntimeReference"
                                        },
                                        "method": "POST",
                                        "headers": {},
                                        "body": {
                                            "value":  "{\n   \"Subject\": \"Data Copied Successfully Alert !\",\n   \"EmailTo\": \"@{pipeline().parameters.EmailTo}\",\n   \"DataFactoryName\": \"@{pipeline().DataFactory}\",\n   \"PipelineName\": \"@{pipeline().Pipeline}\",\n   \"Schema\": \"@{pipeline().parameters.schemaName}\",\n   \"FileNames\": \"@{concat(pipeline().parameters.tableName,'.json')}\"\n}",
                                            "type": "Expression"
                                        }
                                    }
                                }
                            ],
                            "parameters": {
                                "schemaName": {
                                    "type": "string",
                                    "defaultValue": "[parameters('schemaName')]"
                                },
                                "tableName": {
                                    "type": "string",
                                    "defaultValue": "[parameters('tableName')]"
                                },
                                "containerName": {
                                    "type": "string",
                                    "defaultValue": "[parameters('containerName')]"
                                },
                                "datasetName": {
                                    "type": "string",
                                    "defaultValue": "[variables('datasetJson')]"
                                },
                                "EmailTo": {
                                    "type": "string",
                                    "defaultValue": ""
                                }
                            },
                            "folder": {
                                "name": "SynapseDataExporter/ExportSingleTableDataToJson"
                            },
                            "annotations": [],
                            "lastPublishTime": "2021-03-24T10:58:22Z"
                        },
                        "dependsOn": [
                            "[parameters('factoryName')]",
                            "[concat(variables('factoryId'), '/datasets/AzureSynapseAnalyticsTable')]",
                            "[concat(variables('factoryId'), '/datasets/BlobDataJson')]",
                            "[concat(variables('factoryId'), '/integrationRuntimes/AutoResolveIntegrationRuntime')]",
                            "[concat(variables('factoryId'), '/linkedServices/AzureBlobStorageLinkedService')]"
                        ]
                    },

                    {
                        "name": "[concat(parameters('factoryName'), '/SynapseToBlobPipelineJsonl')]",
                        "type": "Microsoft.DataFactory/factories/pipelines",
                        "apiVersion": "2018-06-01",
                        "properties": {
                            "activities": [
                                {
                                    "name": "SynapseSqlpoolToBlobStorage",
                                    "type": "Copy",
                                    "dependsOn": [],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "source": {
                                            "type": "SqlDWSource",
                                            "queryTimeout": "02:00:00",
                                            "partitionOption": "None"
                                        },
                                        "sink": {
                                            "type": "JsonSink",
                                            "storeSettings": {
                                                "type": "AzureBlobStorageWriteSettings"
                                            },
                                            "formatSettings": {
                                                "type": "JsonWriteSettings"
                                            }
                                        },
                                        "enableStaging": true,
                                        "stagingSettings": {
                                            "linkedServiceName": {
                                                "referenceName": "AzureBlobStorageLinkedService",
                                                "type": "LinkedServiceReference"
                                            },
                                            "path": "output"
                                        },
                                        "translator": {
                                            "type": "TabularTranslator"
                                        }
                                    },
                                    "inputs": [
                                        {
                                            "referenceName": "AzureSynapseAnalyticsTable",
                                            "type": "DatasetReference",
                                            "parameters": {
                                                "tableName": {
                                                    "value": "@pipeline().parameters.tableName",
                                                    "type": "Expression"
                                                },
                                                "schemaName": {
                                                    "value": "@pipeline().parameters.schemaName",
                                                    "type": "Expression"
                                                }
                                            }
                                        }
                                    ],
                                    "outputs": [
                                        {
                                            "referenceName": "BlobDataJson",
                                            "type": "DatasetReference",
                                            "parameters": {
                                                "containerName": {
                                                    "value": "@pipeline().parameters.containerName",
                                                    "type": "Expression"
                                                },
                                                "datasetName": {
                                                    "value": "@pipeline().parameters.datasetName",
                                                    "type": "Expression"
                                                }
                                            }
                                        }
                                    ]
                                },
                                {
                                    "name": "Send file name to applogic",
                                    "type": "WebActivity",
                                    "dependsOn": [
                                        {
                                            "activity": "SynapseSqlpoolToBlobStorage",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "url": "[listCallbackURL(resourceId('Microsoft.Logic/workflows/triggers', parameters('logicAppName'), 'manual'), '2019-05-01').value]",
                                        "connectVia": {
                                            "referenceName": "AutoResolveIntegrationRuntime",
                                            "type": "IntegrationRuntimeReference"
                                        },
                                        "method": "POST",
                                        "headers": {},
                                        "body": {
                                            "value":  "{\n   \"Subject\": \"Data Copied Successfully Alert !\",\n   \"EmailTo\": \"@{pipeline().parameters.EmailTo}\",\n   \"DataFactoryName\": \"@{pipeline().DataFactory}\",\n   \"PipelineName\": \"@{pipeline().Pipeline}\",\n   \"Schema\": \"@{pipeline().parameters.schemaName}\",\n   \"FileNames\": \"@{concat(pipeline().parameters.tableName,'.jsonl')}\"\n}",
                                            "type": "Expression"
                                        }
                                    }
                                }
                            ],
                            "parameters": {
                                "schemaName": {
                                    "type": "string",
                                    "defaultValue": "[parameters('schemaName')]"
                                },
                                "tableName": {
                                    "type": "string",
                                    "defaultValue": "[parameters('tableName')]"
                                },
                                "containerName": {
                                    "type": "string",
                                    "defaultValue": "[parameters('containerName')]"
                                },
                                "datasetName": {
                                    "type": "string",
                                    "defaultValue": "[variables('datasetJsonl')]"
                                },
                                "EmailTo": {
                                    "type": "string",
                                    "defaultValue": ""
                                }
                            },
                            "folder": {
                                "name": "SynapseDataExporter/ExportSingleTableDataToJsonl"
                            },
                            "annotations": [],
                            "lastPublishTime": "2021-03-30T10:17:31Z"
                        },
                        "dependsOn": [
                            "[parameters('factoryName')]",
                            "[concat(variables('factoryId'), '/datasets/AzureSynapseAnalyticsTable')]",
                            "[concat(variables('factoryId'), '/datasets/BlobDataJson')]",
                            "[concat(variables('factoryId'), '/integrationRuntimes/AutoResolveIntegrationRuntime')]",
                            "[concat(variables('factoryId'), '/linkedServices/AzureBlobStorageLinkedService')]"
                        ]
                    },

                    {
                        "name": "[concat(parameters('factoryName'), '/SynapseToBlobPipelineParquet')]",
                        "type": "Microsoft.DataFactory/factories/pipelines",
                        "apiVersion": "2018-06-01",
                        "properties": {
                            "activities": [
                                {
                                    "name": "SynapseSqlpoolToBlobStorage",
                                    "type": "Copy",
                                    "dependsOn": [],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "source": {
                                            "type": "SqlDWSource",
                                            "queryTimeout": "02:00:00",
                                            "partitionOption": "None"
                                        },
                                        "sink": {
                                            "type": "ParquetSink",
                                            "storeSettings": {
                                                "type": "AzureBlobStorageWriteSettings"
                                            },
                                            "formatSettings": {
                                                "type": "ParquetWriteSettings"
                                            }
                                        },
                                        "enableStaging": true,
                                        "stagingSettings": {
                                            "linkedServiceName": {
                                                "referenceName": "AzureBlobStorageLinkedService",
                                                "type": "LinkedServiceReference"
                                            },
                                            "path": "output"
                                        },
                                        "translator": {
                                            "type": "TabularTranslator",
                                            "typeConversion": true,
                                            "typeConversionSettings": {
                                                "allowDataTruncation": true,
                                                "treatBooleanAsNumber": false
                                            }
                                        }
                                    },
                                    "inputs": [
                                        {
                                            "referenceName": "AzureSynapseAnalyticsTable",
                                            "type": "DatasetReference",
                                            "parameters": {
                                                "tableName": {
                                                    "value": "@pipeline().parameters.tableName",
                                                    "type": "Expression"
                                                },
                                                "schemaName": {
                                                    "value": "@pipeline().parameters.schemaName",
                                                    "type": "Expression"
                                                }
                                            }
                                        }
                                    ],
                                    "outputs": [
                                        {
                                            "referenceName": "BlobDataParquet",
                                            "type": "DatasetReference",
                                            "parameters": {
                                                "containerName": {
                                                    "value": "@pipeline().parameters.containerName",
                                                    "type": "Expression"
                                                },
                                                "datasetName": {
                                                    "value": "@pipeline().parameters.datasetName",
                                                    "type": "Expression"
                                                }
                                            }
                                        }
                                    ]
                                },
                                {
                                    "name": "Send file name to applogic",
                                    "type": "WebActivity",
                                    "dependsOn": [
                                        {
                                            "activity": "SynapseSqlpoolToBlobStorage",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "url": "https://prod-28.eastus.logic.azure.com:443/workflows/c84e022fc6574de1ab3199b325f0f93a/triggers/manual/paths/invoke?api-version=2019-05-01&sp=%2Ftriggers%2Fmanual%2Frun&sv=1.0&sig=FZY8pghUIEW7b2HA30y-cCmaD-k9cBt0xb7tU2o94sE",
                                        "connectVia": {
                                            "referenceName": "AutoResolveIntegrationRuntime",
                                            "type": "IntegrationRuntimeReference"
                                        },
                                        "method": "POST",
                                        "headers": {},
                                        "body": {
                                            "value": "{\n   \"Subject\": \"Data Copied Successfully Alert !\",\n   \"EmailTo\": \"@{pipeline().parameters.EmailTo}\",\n   \"DataFactoryName\": \"@{pipeline().DataFactory}\",\n   \"PipelineName\": \"@{pipeline().Pipeline}\",\n   \"Schema\": \"@{pipeline().parameters.schemaName}\",\n   \"FileNames\": \"@{concat(pipeline().parameters.tableName,'.parquet')}\"\n}",
                                            "type": "Expression"
                                        }
                                    }
                                }
                            ],
                            "parameters": {
                                "schemaName": {
                                    "type": "string",
                                    "defaultValue": "[parameters('schemaName')]"
                                },
                                "tableName": {
                                    "type": "string",
                                    "defaultValue": "[parameters('tableName')]"
                                },
                                "containerName": {
                                    "type": "string",
                                    "defaultValue": "[parameters('containerName')]"
                                },
                                "datasetName": {
                                    "type": "string",
                                    "defaultValue": "[variables('datasetParquet')]"
                                },
                                "EmailTo": {
                                    "type": "string",
                                    "defaultValue": ""
                                }
                            },
                            "folder": {
                                "name": "SynapseDataExporter/ExportSingleTableDataToParquet"
                            },
                            "annotations": [],
                            "lastPublishTime": "2021-04-06T10:53:12Z"
                        },
                        "dependsOn": [
                            "[parameters('factoryName')]",
                            "[concat(variables('factoryId'), '/datasets/AzureSynapseAnalyticsTable')]",
                            "[concat(variables('factoryId'), '/datasets/BlobDataParquet')]",
                            "[concat(variables('factoryId'), '/integrationRuntimes/AutoResolveIntegrationRuntime')]",
                            "[concat(variables('factoryId'), '/linkedServices/AzureBlobStorageLinkedService')]"
                        ]
                    },


                    {
                        "name": "[concat(parameters('factoryName'), '/AllTablesFromSynapseToBlobCsv')]",
                        "type": "Microsoft.DataFactory/factories/pipelines",
                        "apiVersion": "2018-06-01",
                        "properties": {
                            "activities": [
                                {
                                    "name": "get-tables",
                                    "type": "Lookup",
                                    "dependsOn": [],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "source": {
                                            "type": "SqlDWSource",
                                            "sqlReaderQuery": {
                                                "value": "select * from synapsesqlpool.INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE='BASE TABLE' AND TABLE_SCHEMA='@{pipeline().parameters.schemaName}'",
                                                "type": "Expression"
                                            },
                                            "queryTimeout": "02:00:00",
                                            "partitionOption": "None"
                                        },
                                        "dataset": {
                                            "referenceName": "AzureSynapseAnalyticsTable",
                                            "type": "DatasetReference",
                                            "parameters": {
                                                "tableName": "value from query",
                                                "schemaName": "value from quwry"
                                            }
                                        },
                                        "firstRowOnly": false
                                    }
                                },
                                {
                                    "name": "copy-each-table",
                                    "type": "ForEach",
                                    "dependsOn": [
                                        {
                                            "activity": "get-tables",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "userProperties": [],
                                    "typeProperties": {
                                        "items": {
                                            "value": "@activity('get-tables').output.value",
                                            "type": "Expression"
                                        },
                                        "activities": [
                                            {
                                                "name": "Copy data from syanapse to blob storage",
                                                "type": "Copy",
                                                "dependsOn": [],
                                                "policy": {
                                                    "timeout": "7.00:00:00",
                                                    "retry": 0,
                                                    "retryIntervalInSeconds": 30,
                                                    "secureOutput": false,
                                                    "secureInput": false
                                                },
                                                "userProperties": [],
                                                "typeProperties": {
                                                    "source": {
                                                        "type": "SqlDWSource",
                                                        "queryTimeout": "02:00:00",
                                                        "partitionOption": "None"
                                                    },
                                                    "sink": {
                                                        "type": "DelimitedTextSink",
                                                        "storeSettings": {
                                                            "type": "AzureBlobStorageWriteSettings"
                                                        },
                                                        "formatSettings": {
                                                            "type": "DelimitedTextWriteSettings",
                                                            "quoteAllText": true,
                                                            "fileExtension": ".txt"
                                                        }
                                                    },
                                                    "enableStaging": false,
                                                    "translator": {
                                                        "type": "TabularTranslator",
                                                        "typeConversion": true,
                                                        "typeConversionSettings": {
                                                            "allowDataTruncation": true,
                                                            "treatBooleanAsNumber": false
                                                        }
                                                    }
                                                },
                                                "inputs": [
                                                    {
                                                        "referenceName": "AzureSynapseAnalyticsTable",
                                                        "type": "DatasetReference",
                                                        "parameters": {
                                                            "tableName": {
                                                                "value": "@item().Table_Name",
                                                                "type": "Expression"
                                                            },
                                                            "schemaName": {
                                                                "value": "@item().table_schema",
                                                                "type": "Expression"
                                                            }
                                                        }
                                                    }
                                                ],
                                                "outputs": [
                                                    {
                                                        "referenceName": "BlobData",
                                                        "type": "DatasetReference",
                                                        "parameters": {
                                                            "containerName": {
                                                                "value": "@pipeline().parameters.containerName",
                                                                "type": "Expression"
                                                            },
                                                            "datasetName": {
                                                                "value": "@concat(item().table_schema,'_',item().table_name,'.csv')",
                                                                "type": "Expression"
                                                            }
                                                        }
                                                    }
                                                ]
                                            },
                                            {
                                                "name": "AppendFileNameVariable",
                                                "type": "AppendVariable",
                                                "dependsOn": [
                                                    {
                                                        "activity": "Copy data from syanapse to blob storage",
                                                        "dependencyConditions": [
                                                            "Succeeded"
                                                        ]
                                                    }
                                                ],
                                                "userProperties": [],
                                                "typeProperties": {
                                                    "variableName": "fileNamesCopy",
                                                    "value": {
                                                        "value": "@concat(item().table_schema,'_',item().table_name,'.csv')",
                                                        "type": "Expression"
                                                    }
                                                }
                                            }
                                        ]
                                    }
                                },
                                {
                                    "name": "Send files list to app logic",
                                    "type": "WebActivity",
                                    "dependsOn": [
                                        {
                                            "activity": "Set Files list",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "url": {
                                            "value": "[listCallbackURL(resourceId('Microsoft.Logic/workflows/triggers', parameters('logicAppName'), 'manual'), '2019-05-01').value]",
                                            "type": "Expression"
                                        },
                                        "connectVia": {
                                            "referenceName": "AutoResolveIntegrationRuntime",
                                            "type": "IntegrationRuntimeReference"
                                        },
                                        "method": "POST",
                                        "headers": {},
                                        "body": {
                                            "value": "{\n   \"Subject\": \"Data Copied Successfully Alert !\",\n   \"EmailTo\": \"@{pipeline().parameters.EmailTo}\",\n   \"DataFactoryName\": \"@{pipeline().DataFactory}\",\n   \"PipelineName\": \"@{pipeline().Pipeline}\",\n   \"Schema\": \"@{pipeline().parameters.schemaName}\",\n   \"FileNames\": \"@{variables('fileName')}\"\n}",
                                            "type": "Expression"
                                        }
                                    }
                                },
                                {
                                    "name": "Set Files list",
                                    "type": "SetVariable",
                                    "dependsOn": [
                                        {
                                            "activity": "copy-each-table",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "userProperties": [],
                                    "typeProperties": {
                                        "variableName": "fileName",
                                        "value": {
                                            "value": "@join(variables('fileNamesCopy'),', ')",
                                            "type": "Expression"
                                        }
                                    }
                                }
                            ],
                            "parameters": {
                                "containerName": {
                                    "type": "string",
                                    "defaultValue": "synapsesqlpooldata"
                                },
                                "schemaName": {
                                    "type": "string",
                                    "defaultValue": "covid"
                                },
                                "EmailTo": {
                                    "type": "string",
                                    "defaultValue": ""
                                }
                            },
                            "variables": {
                                "fileNamesCopy": {
                                    "type": "Array"
                                },
                                "fileName": {
                                    "type": "String"
                                }
                            },
                            "folder": {
                                "name": "SynapseDataExporter/ExportSingleSchemaDataToCsv"
                            },
                            "annotations": [],
                            "lastPublishTime": "2021-03-25T09:02:26Z"
                        },
                        "dependsOn": [
                            "[parameters('factoryName')]",
                            "[concat(variables('factoryId'), '/datasets/AzureSynapseAnalyticsTable')]",
                            "[concat(variables('factoryId'), '/integrationRuntimes/AutoResolveIntegrationRuntime')]",
                            "[concat(variables('factoryId'), '/datasets/BlobData')]"
                        ]
                    },
                    {
                        "name": "[concat(parameters('factoryName'), '/AllTablesFromSynapseToBlobJson')]",
                        "type": "Microsoft.DataFactory/factories/pipelines",
                        "apiVersion": "2018-06-01",
                        "properties": {
                            "activities": [
                                {
                                    "name": "get-tables",
                                    "type": "Lookup",
                                    "dependsOn": [],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "source": {
                                            "type": "SqlDWSource",
                                            "sqlReaderQuery": {
                                                "value": "select * from synapsesqlpool.INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE='BASE TABLE' AND TABLE_SCHEMA='@{pipeline().parameters.schemaName}'",
                                                "type": "Expression"
                                            },
                                            "queryTimeout": "02:00:00",
                                            "partitionOption": "None"
                                        },
                                        "dataset": {
                                            "referenceName": "AzureSynapseAnalyticsTable",
                                            "type": "DatasetReference",
                                            "parameters": {
                                                "tableName": "value from query",
                                                "schemaName": "value from quwry"
                                            }
                                        },
                                        "firstRowOnly": false
                                    }
                                },
                                {
                                    "name": "copy-each-table",
                                    "type": "ForEach",
                                    "dependsOn": [
                                        {
                                            "activity": "get-tables",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "userProperties": [],
                                    "typeProperties": {
                                        "items": {
                                            "value": "@activity('get-tables').output.value",
                                            "type": "Expression"
                                        },
                                        "activities": [
                                            {
                                                "name": "Copy data from syanapse to blob storage",
                                                "type": "Copy",
                                                "dependsOn": [],
                                                "policy": {
                                                    "timeout": "7.00:00:00",
                                                    "retry": 0,
                                                    "retryIntervalInSeconds": 30,
                                                    "secureOutput": false,
                                                    "secureInput": false
                                                },
                                                "userProperties": [],
                                                "typeProperties": {
                                                    "source": {
                                                        "type": "SqlDWSource",
                                                        "queryTimeout": "02:00:00",
                                                        "partitionOption": "None"
                                                    },
                                                    "sink": {
                                                        "type": "JsonSink",
                                                        "storeSettings": {
                                                            "type": "AzureBlobStorageWriteSettings"
                                                        },
                                                        "formatSettings": {
                                                            "type": "JsonWriteSettings"
                                                        }
                                                    },
                                                    "enableStaging": false
                                                },
                                                "inputs": [
                                                    {
                                                        "referenceName": "AzureSynapseAnalyticsTable",
                                                        "type": "DatasetReference",
                                                        "parameters": {
                                                            "tableName": {
                                                                "value": "@item().Table_Name",
                                                                "type": "Expression"
                                                            },
                                                            "schemaName": {
                                                                "value": "@item().table_schema",
                                                                "type": "Expression"
                                                            }
                                                        }
                                                    }
                                                ],
                                                "outputs": [
                                                    {
                                                        "referenceName": "BlobDataJson",
                                                        "type": "DatasetReference",
                                                        "parameters": {
                                                            "containerName": {
                                                                "value": "@pipeline().parameters.containerName",
                                                                "type": "Expression"
                                                            },
                                                            "datasetName": {
                                                                "value": "@concat(item().table_schema,'_',item().table_name,'.json')",
                                                                "type": "Expression"
                                                            }
                                                        }
                                                    }
                                                ]
                                            },
                                            {
                                                "name": "AppendFileNameVariable",
                                                "type": "AppendVariable",
                                                "dependsOn": [
                                                    {
                                                        "activity": "Copy data from syanapse to blob storage",
                                                        "dependencyConditions": [
                                                            "Succeeded"
                                                        ]
                                                    }
                                                ],
                                                "userProperties": [],
                                                "typeProperties": {
                                                    "variableName": "fileNamesCopy",
                                                    "value": {
                                                        "value": "@concat(item().table_schema,'_',item().table_name,'.json')",
                                                        "type": "Expression"
                                                    }
                                                }
                                            }
                                        ]
                                    }
                                },
                                {
                                    "name": "Send files list to app logic",
                                    "type": "WebActivity",
                                    "dependsOn": [
                                        {
                                            "activity": "Set Files list",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "url": {
                                            "value": "[listCallbackURL(resourceId('Microsoft.Logic/workflows/triggers', parameters('logicAppName'), 'manual'), '2019-05-01').value]",
                                            "type": "Expression"
                                        },
                                        "connectVia": {
                                            "referenceName": "AutoResolveIntegrationRuntime",
                                            "type": "IntegrationRuntimeReference"
                                        },
                                        "method": "POST",
                                        "headers": {},
                                        "body": {
                                            "value": "{\n   \"Subject\": \"Data Copied Successfully Alert !\",\n   \"EmailTo\": \"@{pipeline().parameters.EmailTo}\",\n   \"DataFactoryName\": \"@{pipeline().DataFactory}\",\n   \"PipelineName\": \"@{pipeline().Pipeline}\",\n   \"Schema\": \"@{pipeline().parameters.schemaName}\",\n   \"FileNames\": \"@{variables('fileName')}\"\n}",
                                            "type": "Expression"
                                        }
                                    }
                                },
                                {
                                    "name": "Set Files list",
                                    "type": "SetVariable",
                                    "dependsOn": [
                                        {
                                            "activity": "copy-each-table",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "userProperties": [],
                                    "typeProperties": {
                                        "variableName": "fileName",
                                        "value": {
                                            "value": "@join(variables('fileNamesCopy'),', ')",
                                            "type": "Expression"
                                        }
                                    }
                                }
                            ],
                            "parameters": {
                                "containerName": {
                                    "type": "string",
                                    "defaultValue": "synapsesqlpooldata"
                                },
                                "schemaName": {
                                    "type": "string",
                                    "defaultValue": "covid"
                                },
                                "EmailTo": {
                                    "type": "string",
                                    "defaultValue": ""
                                }
                            },
                            "variables": {
                                "fileNamesCopy": {
                                    "type": "Array"
                                },
                                "fileName": {
                                    "type": "String"
                                }
                            },
                            "folder": {
                                "name": "SynapseDataExporter/ExportSingleSchemaDataToJson"
                            },
                            "annotations": [],
                            "lastPublishTime": "2021-03-25T09:02:26Z"
                        },
                        "dependsOn": [
                            "[parameters('factoryName')]",
                            "[concat(variables('factoryId'), '/datasets/AzureSynapseAnalyticsTable')]",
                            "[concat(variables('factoryId'), '/integrationRuntimes/AutoResolveIntegrationRuntime')]",
                            "[concat(variables('factoryId'), '/datasets/BlobDataJson')]"
                        ]
                    },
                            {
                        "name": "[concat(parameters('factoryName'), '/AllTablesFromSynapseToBlobJsonl')]",
                        "type": "Microsoft.DataFactory/factories/pipelines",
                        "apiVersion": "2018-06-01",
                        "properties": {
                            "activities": [
                                {
                                    "name": "get-tables",
                                    "type": "Lookup",
                                    "dependsOn": [],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "source": {
                                            "type": "SqlDWSource",
                                            "sqlReaderQuery": {
                                                "value": "select * from synapsesqlpool.INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE='BASE TABLE' AND TABLE_SCHEMA='@{pipeline().parameters.schemaName}'",
                                                "type": "Expression"
                                            },
                                            "queryTimeout": "02:00:00",
                                            "partitionOption": "None"
                                        },
                                        "dataset": {
                                            "referenceName": "AzureSynapseAnalyticsTable",
                                            "type": "DatasetReference",
                                            "parameters": {
                                                "tableName": "value from query",
                                                "schemaName": "value from quwry"
                                            }
                                        },
                                        "firstRowOnly": false
                                    }
                                },
                                {
                                    "name": "copy-each-table",
                                    "type": "ForEach",
                                    "dependsOn": [
                                        {
                                            "activity": "get-tables",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "userProperties": [],
                                    "typeProperties": {
                                        "items": {
                                            "value": "@activity('get-tables').output.value",
                                            "type": "Expression"
                                        },
                                        "activities": [
                                            {
                                                "name": "Copy data from syanapse to blob storage",
                                                "type": "Copy",
                                                "dependsOn": [],
                                                "policy": {
                                                    "timeout": "7.00:00:00",
                                                    "retry": 0,
                                                    "retryIntervalInSeconds": 30,
                                                    "secureOutput": false,
                                                    "secureInput": false
                                                },
                                                "userProperties": [],
                                                "typeProperties": {
                                                    "source": {
                                                        "type": "SqlDWSource",
                                                        "queryTimeout": "02:00:00",
                                                        "partitionOption": "None"
                                                    },
                                                    "sink": {
                                                        "type": "JsonSink",
                                                        "storeSettings": {
                                                            "type": "AzureBlobStorageWriteSettings"
                                                        },
                                                        "formatSettings": {
                                                            "type": "JsonWriteSettings"
                                                        }
                                                    },
                                                    "enableStaging": false
                                                },
                                                "inputs": [
                                                    {
                                                        "referenceName": "AzureSynapseAnalyticsTable",
                                                        "type": "DatasetReference",
                                                        "parameters": {
                                                            "tableName": {
                                                                "value": "@item().Table_Name",
                                                                "type": "Expression"
                                                            },
                                                            "schemaName": {
                                                                "value": "@item().table_schema",
                                                                "type": "Expression"
                                                            }
                                                        }
                                                    }
                                                ],
                                                "outputs": [
                                                    {
                                                        "referenceName": "BlobDataJson",
                                                        "type": "DatasetReference",
                                                        "parameters": {
                                                            "containerName": {
                                                                "value": "@pipeline().parameters.containerName",
                                                                "type": "Expression"
                                                            },
                                                            "datasetName": {
                                                                "value": "@concat(item().table_schema,'_',item().table_name,'.jsonl')",
                                                                "type": "Expression"
                                                            }
                                                        }
                                                    }
                                                ]
                                            },
                                            {
                                                "name": "AppendFileNameVariable",
                                                "type": "AppendVariable",
                                                "dependsOn": [
                                                    {
                                                        "activity": "Copy data from syanapse to blob storage",
                                                        "dependencyConditions": [
                                                            "Succeeded"
                                                        ]
                                                    }
                                                ],
                                                "userProperties": [],
                                                "typeProperties": {
                                                    "variableName": "fileNamesCopy",
                                                    "value": {
                                                        "value": "@concat(item().table_schema,'_',item().table_name,'.jsonl')",
                                                        "type": "Expression"
                                                    }
                                                }
                                            }
                                        ]
                                    }
                                },
                                {
                                    "name": "Send files list to app logic",
                                    "type": "WebActivity",
                                    "dependsOn": [
                                        {
                                            "activity": "Set Files list",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "url": {
                                            "value": "[listCallbackURL(resourceId('Microsoft.Logic/workflows/triggers', parameters('logicAppName'), 'manual'), '2019-05-01').value]",
                                            "type": "Expression"
                                        },
                                        "connectVia": {
                                            "referenceName": "AutoResolveIntegrationRuntime",
                                            "type": "IntegrationRuntimeReference"
                                        },
                                        "method": "POST",
                                        "headers": {},
                                        "body": {
                                            "value":"{\n   \"Subject\": \"Data Copied Successfully Alert !\",\n   \"EmailTo\": \"@{pipeline().parameters.EmailTo}\",\n   \"DataFactoryName\": \"@{pipeline().DataFactory}\",\n   \"PipelineName\": \"@{pipeline().Pipeline}\",\n   \"Schema\": \"@{pipeline().parameters.schemaName}\",\n   \"FileNames\": \"@{variables('fileName')}\"\n}",
                                            "type": "Expression"
                                        }
                                    }
                                },
                                {
                                    "name": "Set Files list",
                                    "type": "SetVariable",
                                    "dependsOn": [
                                        {
                                            "activity": "copy-each-table",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "userProperties": [],
                                    "typeProperties": {
                                        "variableName": "fileName",
                                        "value": {
                                            "value": "@join(variables('fileNamesCopy'),', ')",
                                            "type": "Expression"
                                        }
                                    }
                                }
                            ],
                            "parameters": {
                                "containerName": {
                                    "type": "string",
                                    "defaultValue": "synapsesqlpooldata"
                                },
                                "schemaName": {
                                    "type": "string",
                                    "defaultValue": "covid"
                                },
                                "EmailTo": {
                                    "type": "string",
                                    "defaultValue": ""
                                }
                            },
                            "variables": {
                                "fileNamesCopy": {
                                    "type": "Array"
                                },
                                "fileName": {
                                    "type": "String"
                                }
                            },
                            "folder": {
                                "name": "SynapseDataExporter/ExportSingleSchemaDataToJsonl"
                            },
                            "annotations": [],
                            "lastPublishTime": "2021-03-30T05:32:37Z"
                        },
                        "dependsOn": [
                            "[parameters('factoryName')]",
                            "[concat(variables('factoryId'), '/datasets/AzureSynapseAnalyticsTable')]",
                            "[concat(variables('factoryId'), '/integrationRuntimes/AutoResolveIntegrationRuntime')]",
                            "[concat(variables('factoryId'), '/datasets/BlobDataJson')]"
                        ]
                    },
                    {
                        "name": "[concat(parameters('factoryName'), '/AllTablesFromSynapseToBlobParquet')]",
                        "type": "Microsoft.DataFactory/factories/pipelines",
                        "apiVersion": "2018-06-01",
                        "properties": {
                            "activities": [
                                {
                                    "name": "get-tables",
                                    "type": "Lookup",
                                    "dependsOn": [],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "source": {
                                            "type": "SqlDWSource",
                                            "sqlReaderQuery": {
                                                "value": "select * from synapsesqlpool.INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE='BASE TABLE' AND TABLE_SCHEMA='@{pipeline().parameters.schemaName}'",
                                                "type": "Expression"
                                            },
                                            "queryTimeout": "02:00:00",
                                            "partitionOption": "None"
                                        },
                                        "dataset": {
                                            "referenceName": "AzureSynapseAnalyticsTable",
                                            "type": "DatasetReference",
                                            "parameters": {
                                                "tableName": "value from query",
                                                "schemaName": "value from quwry"
                                            }
                                        },
                                        "firstRowOnly": false
                                    }
                                },
                                {
                                    "name": "copy-each-table",
                                    "type": "ForEach",
                                    "dependsOn": [
                                        {
                                            "activity": "get-tables",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "userProperties": [],
                                    "typeProperties": {
                                        "items": {
                                            "value": "@activity('get-tables').output.value",
                                            "type": "Expression"
                                        },
                                        "activities": [
                                            {
                                                "name": "Copy data from syanapse to blob storage",
                                                "type": "Copy",
                                                "dependsOn": [],
                                                "policy": {
                                                    "timeout": "7.00:00:00",
                                                    "retry": 0,
                                                    "retryIntervalInSeconds": 30,
                                                    "secureOutput": false,
                                                    "secureInput": false
                                                },
                                                "userProperties": [],
                                                "typeProperties": {
                                                    "source": {
                                                        "type": "SqlDWSource",
                                                        "queryTimeout": "02:00:00",
                                                        "partitionOption": "None"
                                                    },
                                                    "sink": {
                                                        "type": "ParquetSink",
                                                        "storeSettings": {
                                                            "type": "AzureBlobStorageWriteSettings"
                                                        },
                                                        "formatSettings": {
                                                            "type": "ParquetWriteSettings"
                                                        }
                                                    },
                                                    "enableStaging": false,
                                                    "translator": {
                                                        "type": "TabularTranslator",
                                                        "typeConversion": true,
                                                        "typeConversionSettings": {
                                                            "allowDataTruncation": true,
                                                            "treatBooleanAsNumber": false
                                                        }
                                                    }
                                                },
                                                "inputs": [
                                                    {
                                                        "referenceName": "AzureSynapseAnalyticsTable",
                                                        "type": "DatasetReference",
                                                        "parameters": {
                                                            "tableName": {
                                                                "value": "@item().Table_Name",
                                                                "type": "Expression"
                                                            },
                                                            "schemaName": {
                                                                "value": "@item().table_schema",
                                                                "type": "Expression"
                                                            }
                                                        }
                                                    }
                                                ],
                                                "outputs": [
                                                    {
                                                        "referenceName": "BlobDataParquet",
                                                        "type": "DatasetReference",
                                                        "parameters": {
                                                            "containerName": {
                                                                "value": "@pipeline().parameters.containerName",
                                                                "type": "Expression"
                                                            },
                                                            "datasetName": {
                                                                "value": "@concat(item().table_schema,'_',item().table_name,'.parquet')",
                                                                "type": "Expression"
                                                            }
                                                        }
                                                    }
                                                ]
                                            },
                                            {
                                                "name": "AppendFileNameVariable",
                                                "type": "AppendVariable",
                                                "dependsOn": [
                                                    {
                                                        "activity": "Copy data from syanapse to blob storage",
                                                        "dependencyConditions": [
                                                            "Succeeded"
                                                        ]
                                                    }
                                                ],
                                                "userProperties": [],
                                                "typeProperties": {
                                                    "variableName": "fileNamesCopy",
                                                    "value": {
                                                        "value": "@concat(item().table_schema,'_',item().table_name,'.parquet')",
                                                        "type": "Expression"
                                                    }
                                                }
                                            }
                                        ]
                                    }
                                },
                                {
                                    "name": "Send files list to app logic",
                                    "type": "WebActivity",
                                    "dependsOn": [
                                        {
                                            "activity": "Set Files list",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "url": {
                                            "value": "[listCallbackURL(resourceId('Microsoft.Logic/workflows/triggers', parameters('logicAppName'), 'manual'), '2019-05-01').value]",
                                            "type": "Expression"
                                        },
                                        "connectVia": {
                                            "referenceName": "AutoResolveIntegrationRuntime",
                                            "type": "IntegrationRuntimeReference"
                                        },
                                        "method": "POST",
                                        "headers": {},
                                        "body": {
                                            "value": "{\n   \"Subject\": \"Data Copied Successfully Alert !\",\n   \"EmailTo\": \"@{pipeline().parameters.EmailTo}\",\n   \"DataFactoryName\": \"@{pipeline().DataFactory}\",\n   \"PipelineName\": \"@{pipeline().Pipeline}\",\n   \"Schema\": \"@{pipeline().parameters.schemaName}\",\n   \"FileNames\": \"@{variables('fileName')}\"\n}",
                                            "type": "Expression"
                                        }
                                    }
                                },
                                {
                                    "name": "Set Files list",
                                    "type": "SetVariable",
                                    "dependsOn": [
                                        {
                                            "activity": "copy-each-table",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "userProperties": [],
                                    "typeProperties": {
                                        "variableName": "fileName",
                                        "value": {
                                            "value": "@join(variables('fileNamesCopy'),', ')",
                                            "type": "Expression"
                                        }
                                    }
                                }
                            ],
                            "parameters": {
                                "containerName": {
                                    "type": "string",
                                    "defaultValue": "synapsesqlpooldata"
                                },
                                "schemaName": {
                                    "type": "string",
                                    "defaultValue": "covid"
                                },
                                "EmailTo": {
                                    "type": "string",
                                    "defaultValue": ""
                                }
                            },
                            "variables": {
                                "fileNamesCopy": {
                                    "type": "Array"
                                },
                                "fileName": {
                                    "type": "String"
                                }
                            },
                            "folder": {
                                "name": "SynapseDataExporter/ExportSingleSchemaDataToParquet"
                            },
                            "annotations": [],
                            "lastPublishTime": "2021-03-25T09:02:26Z"
                        },
                        "dependsOn": [
                            "[parameters('factoryName')]",
                            "[concat(variables('factoryId'), '/datasets/AzureSynapseAnalyticsTable')]",
                            "[concat(variables('factoryId'), '/integrationRuntimes/AutoResolveIntegrationRuntime')]",
                            "[concat(variables('factoryId'), '/datasets/BlobDataParquet')]"
                        ]
                    },

                    {
                        "name": "[concat(parameters('factoryName'), '/AllTablesOfAllScehmasFromSynapseToBlobCsv')]",
                        "type": "Microsoft.DataFactory/factories/pipelines",
                        "apiVersion": "2018-06-01",
                        "properties": {
                            "activities": [
                                {
                                    "name": "get-tables",
                                    "type": "Lookup",
                                    "dependsOn": [],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "source": {
                                            "type": "SqlDWSource",
                                            "sqlReaderQuery": {
                                                "value": "select * from synapsesqlpool.INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE='BASE TABLE'",
                                                "type": "Expression"
                                            },
                                            "queryTimeout": "02:00:00",
                                            "partitionOption": "None"
                                        },
                                        "dataset": {
                                            "referenceName": "AzureSynapseAnalyticsTable",
                                            "type": "DatasetReference",
                                            "parameters": {
                                                "tableName": "value from query",
                                                "schemaName": "value from quwry"
                                            }
                                        },
                                        "firstRowOnly": false
                                    }
                                },
                                {
                                    "name": "copy-each-table",
                                    "type": "ForEach",
                                    "dependsOn": [
                                        {
                                            "activity": "get-tables",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "userProperties": [],
                                    "typeProperties": {
                                        "items": {
                                            "value": "@activity('get-tables').output.value",
                                            "type": "Expression"
                                        },
                                        "activities": [
                                            {
                                                "name": "Copy data to blob storage",
                                                "type": "Copy",
                                                "dependsOn": [],
                                                "policy": {
                                                    "timeout": "7.00:00:00",
                                                    "retry": 0,
                                                    "retryIntervalInSeconds": 30,
                                                    "secureOutput": false,
                                                    "secureInput": false
                                                },
                                                "userProperties": [],
                                                "typeProperties": {
                                                    "source": {
                                                        "type": "SqlDWSource",
                                                        "queryTimeout": "02:00:00",
                                                        "partitionOption": "None"
                                                    },
                                                    "sink": {
                                                        "type": "DelimitedTextSink",
                                                        "storeSettings": {
                                                            "type": "AzureBlobStorageWriteSettings"
                                                        },
                                                        "formatSettings": {
                                                            "type": "DelimitedTextWriteSettings",
                                                            "quoteAllText": true,
                                                            "fileExtension": ".txt"
                                                        }
                                                    },
                                                    "enableStaging": false,
                                                    "translator": {
                                                        "type": "TabularTranslator",
                                                        "typeConversion": true,
                                                        "typeConversionSettings": {
                                                            "allowDataTruncation": true,
                                                            "treatBooleanAsNumber": false
                                                        }
                                                    }
                                                },
                                                "inputs": [
                                                    {
                                                        "referenceName": "AzureSynapseAnalyticsTable",
                                                        "type": "DatasetReference",
                                                        "parameters": {
                                                            "tableName": {
                                                                "value": "@item().Table_Name",
                                                                "type": "Expression"
                                                            },
                                                            "schemaName": {
                                                                "value": "@item().table_schema",
                                                                "type": "Expression"
                                                            }
                                                        }
                                                    }
                                                ],
                                                "outputs": [
                                                    {
                                                        "referenceName": "BlobData",
                                                        "type": "DatasetReference",
                                                        "parameters": {
                                                            "containerName": {
                                                                "value": "@pipeline().parameters.containerName",
                                                                "type": "Expression"
                                                            },
                                                            "datasetName": {
                                                                "value": "@concat(item().table_schema,'_',item().table_name,'.csv')",
                                                                "type": "Expression"
                                                            }
                                                        }
                                                    }
                                                ]
                                            },
                                            {
                                                "name": "AppendFileNamesvariable",
                                                "type": "AppendVariable",
                                                "dependsOn": [
                                                    {
                                                        "activity": "Copy data to blob storage",
                                                        "dependencyConditions": [
                                                            "Succeeded"
                                                        ]
                                                    }
                                                ],
                                                "userProperties": [],
                                                "typeProperties": {
                                                    "variableName": "fileNamesCopy",
                                                    "value": {
                                                        "value": "@concat(item().table_schema,'_',item().table_name,'.csv')",
                                                        "type": "Expression"
                                                    }
                                                }
                                            }
                                        ]
                                    }
                                },
                                {
                                    "name": "Set Files list",
                                    "type": "SetVariable",
                                    "dependsOn": [
                                        {
                                            "activity": "copy-each-table",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "userProperties": [],
                                    "typeProperties": {
                                        "variableName": "fileName",
                                        "value": {
                                            "value": "@join(variables('fileNamesCopy'),', ')",
                                            "type": "Expression"
                                        }
                                    }
                                },
                                {
                                    "name": "Send files list to logic app",
                                    "type": "WebActivity",
                                    "dependsOn": [
                                        {
                                            "activity": "Set Files list",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "url": "[listCallbackURL(resourceId('Microsoft.Logic/workflows/triggers', parameters('logicAppName'), 'manual'), '2019-05-01').value]",
                                        "connectVia": {
                                            "referenceName": "AutoResolveIntegrationRuntime",
                                            "type": "IntegrationRuntimeReference"
                                        },
                                        "method": "POST",
                                        "headers": {},
                                        "body": {
                                            "value": "{\n   \"Subject\": \"Data Copied Successfully Alert !\",\n   \"EmailTo\": \"@{pipeline().parameters.EmailTo}\",\n   \"DataFactoryName\": \"@{pipeline().DataFactory}\",\n   \"PipelineName\": \"@{pipeline().Pipeline}\",\n   \"FileNames\": \"@{variables('fileName')}\"\n}",
                                            "type": "Expression"
                                        }
                                    }
                                }
                            ],
                            "parameters": {
                                "containerName": {
                                    "type": "string",
                                    "defaultValue": "synapsesqlpooldata"
                                },
                                "EmailTo": {
                                    "type": "string",
                                    "defaultValue": ""
                                }
                            },
                            "variables": {
                                "fileNamesCopy": {
                                    "type": "Array"
                                },
                                "fileName": {
                                    "type": "String"
                                },
                                "schemaNameCopy": {
                                    "type": "Array"
                                },
                                "schemaName": {
                                    "type": "String"
                                }
                            },
                            "folder": {
                                "name": "SynapseDataExporter/ExportAllSchemasDataTocsv"
                            },
                            "annotations": [],
                            "lastPublishTime": "2021-03-24T12:31:35Z"
                        },
                        "dependsOn": [
                            "[parameters('factoryName')]",
                            "[concat(variables('factoryId'), '/datasets/AzureSynapseAnalyticsTable')]",
                            "[concat(variables('factoryId'), '/integrationRuntimes/AutoResolveIntegrationRuntime')]",
                            "[concat(variables('factoryId'), '/datasets/BlobData')]"
                        ]
                    },
                    {
                        "name": "[concat(parameters('factoryName'), '/AllTablesOfAllScehmasFromSynapseToBlobJson')]",
                        "type": "Microsoft.DataFactory/factories/pipelines",
                        "apiVersion": "2018-06-01",
                        "properties": {
                            "activities": [
                                {
                                    "name": "get-tables",
                                    "type": "Lookup",
                                    "dependsOn": [],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "source": {
                                            "type": "SqlDWSource",
                                            "sqlReaderQuery": {
                                                "value": "select * from synapsesqlpool.INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE='BASE TABLE'",
                                                "type": "Expression"
                                            },
                                            "queryTimeout": "02:00:00",
                                            "partitionOption": "None"
                                        },
                                        "dataset": {
                                            "referenceName": "AzureSynapseAnalyticsTable",
                                            "type": "DatasetReference",
                                            "parameters": {
                                                "tableName": "value from query",
                                                "schemaName": "value from quwry"
                                            }
                                        },
                                        "firstRowOnly": false
                                    }
                                },
                                {
                                    "name": "copy-each-table",
                                    "type": "ForEach",
                                    "dependsOn": [
                                        {
                                            "activity": "get-tables",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "userProperties": [],
                                    "typeProperties": {
                                        "items": {
                                            "value": "@activity('get-tables').output.value",
                                            "type": "Expression"
                                        },
                                        "activities": [
                                            {
                                                "name": "Copy data to blob storage",
                                                "type": "Copy",
                                                "dependsOn": [],
                                                "policy": {
                                                    "timeout": "7.00:00:00",
                                                    "retry": 0,
                                                    "retryIntervalInSeconds": 30,
                                                    "secureOutput": false,
                                                    "secureInput": false
                                                },
                                                "userProperties": [],
                                                "typeProperties": {
                                                    "source": {
                                                        "type": "SqlDWSource",
                                                        "queryTimeout": "02:00:00",
                                                        "partitionOption": "None"
                                                    },
                                                    "sink": {
                                                        "type": "JsonSink",
                                                        "storeSettings": {
                                                            "type": "AzureBlobStorageWriteSettings"
                                                        },
                                                        "formatSettings": {
                                                            "type": "JsonWriteSettings"
                                                        }
                                                    },
                                                    "enableStaging": false
                                                },
                                                "inputs": [
                                                    {
                                                        "referenceName": "AzureSynapseAnalyticsTable",
                                                        "type": "DatasetReference",
                                                        "parameters": {
                                                            "tableName": {
                                                                "value": "@item().Table_Name",
                                                                "type": "Expression"
                                                            },
                                                            "schemaName": {
                                                                "value": "@item().table_schema",
                                                                "type": "Expression"
                                                            }
                                                        }
                                                    }
                                                ],
                                                "outputs": [
                                                    {
                                                        "referenceName": "BlobDataJson",
                                                        "type": "DatasetReference",
                                                        "parameters": {
                                                            "containerName": {
                                                                "value": "@pipeline().parameters.containerName",
                                                                "type": "Expression"
                                                            },
                                                            "datasetName": {
                                                                "value": "@concat(item().table_schema,'_',item().table_name,'.json')",
                                                                "type": "Expression"
                                                            }
                                                        }
                                                    }
                                                ]
                                            },
                                            {
                                                "name": "AppendFileNamesvariable",
                                                "type": "AppendVariable",
                                                "dependsOn": [
                                                    {
                                                        "activity": "Copy data to blob storage",
                                                        "dependencyConditions": [
                                                            "Succeeded"
                                                        ]
                                                    }
                                                ],
                                                "userProperties": [],
                                                "typeProperties": {
                                                    "variableName": "fileNamesCopy",
                                                    "value": {
                                                        "value": "@concat(item().table_schema,'_',item().table_name,'.json')",
                                                        "type": "Expression"
                                                    }
                                                }
                                            }
                                        ]
                                    }
                                },
                                {
                                    "name": "Set Files list",
                                    "type": "SetVariable",
                                    "dependsOn": [
                                        {
                                            "activity": "copy-each-table",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "userProperties": [],
                                    "typeProperties": {
                                        "variableName": "fileName",
                                        "value": {
                                            "value": "@join(variables('fileNamesCopy'),', ')",
                                            "type": "Expression"
                                        }
                                    }
                                },
                                {
                                    "name": "Send files list to logic app",
                                    "type": "WebActivity",
                                    "dependsOn": [
                                        {
                                            "activity": "Set Files list",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "url": "[listCallbackURL(resourceId('Microsoft.Logic/workflows/triggers', parameters('logicAppName'), 'manual'), '2019-05-01').value]",
                                        "connectVia": {
                                            "referenceName": "AutoResolveIntegrationRuntime",
                                            "type": "IntegrationRuntimeReference"
                                        },
                                        "method": "POST",
                                        "headers": {},
                                        "body": {
                                            "value": "{\n   \"Subject\": \"Data Copied Successfully Alert !\",\n   \"EmailTo\": \"@{pipeline().parameters.EmailTo}\",\n   \"DataFactoryName\": \"@{pipeline().DataFactory}\",\n   \"PipelineName\": \"@{pipeline().Pipeline}\",\n   \"FileNames\": \"@{variables('fileName')}\"\n}",
                                            "type": "Expression"
                                        }
                                    }
                                }
                            ],
                            "parameters": {
                                "containerName": {
                                    "type": "string",
                                    "defaultValue": "synapsesqlpooldata"
                                },
                                "EmailTo": {
                                    "type": "string",
                                    "defaultValue": ""
                                }
                            },
                            "variables": {
                                "fileNamesCopy": {
                                    "type": "Array"
                                },
                                "fileName": {
                                    "type": "String"
                                },
                                "schemaNameCopy": {
                                    "type": "Array"
                                },
                                "schemaName": {
                                    "type": "String"
                                }
                            },
                            "folder": {
                                "name": "SynapseDataExporter/ExportAllSchemasDataToJson"
                            },
                            "annotations": [],
                            "lastPublishTime": "2021-03-24T12:31:35Z"
                        },
                        "dependsOn": [
                            "[parameters('factoryName')]",
                            "[concat(variables('factoryId'), '/datasets/AzureSynapseAnalyticsTable')]",
                            "[concat(variables('factoryId'), '/integrationRuntimes/AutoResolveIntegrationRuntime')]",
                            "[concat(variables('factoryId'), '/datasets/BlobDataJson')]"
                        ]
                    },
                        {
                        "name": "[concat(parameters('factoryName'), '/AllTablesOfAllScehmasFromSynapseToBlobJsonl')]",
                        "type": "Microsoft.DataFactory/factories/pipelines",
                        "apiVersion": "2018-06-01",
                        "properties": {
                            "activities": [
                                {
                                    "name": "get-tables",
                                    "type": "Lookup",
                                    "dependsOn": [],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "source": {
                                            "type": "SqlDWSource",
                                            "sqlReaderQuery": {
                                                "value": "select * from synapsesqlpool.INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE='BASE TABLE'",
                                                "type": "Expression"
                                            },
                                            "queryTimeout": "02:00:00",
                                            "partitionOption": "None"
                                        },
                                        "dataset": {
                                            "referenceName": "AzureSynapseAnalyticsTable",
                                            "type": "DatasetReference",
                                            "parameters": {
                                                "tableName": "value from query",
                                                "schemaName": "value from quwry"
                                            }
                                        },
                                        "firstRowOnly": false
                                    }
                                },
                                {
                                    "name": "copy-each-table",
                                    "type": "ForEach",
                                    "dependsOn": [
                                        {
                                            "activity": "get-tables",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "userProperties": [],
                                    "typeProperties": {
                                        "items": {
                                            "value": "@activity('get-tables').output.value",
                                            "type": "Expression"
                                        },
                                        "activities": [
                                            {
                                                "name": "Copy data to blob storage",
                                                "type": "Copy",
                                                "dependsOn": [],
                                                "policy": {
                                                    "timeout": "7.00:00:00",
                                                    "retry": 0,
                                                    "retryIntervalInSeconds": 30,
                                                    "secureOutput": false,
                                                    "secureInput": false
                                                },
                                                "userProperties": [],
                                                "typeProperties": {
                                                    "source": {
                                                        "type": "SqlDWSource",
                                                        "queryTimeout": "02:00:00",
                                                        "partitionOption": "None"
                                                    },
                                                    "sink": {
                                                        "type": "JsonSink",
                                                        "storeSettings": {
                                                            "type": "AzureBlobStorageWriteSettings"
                                                        },
                                                        "formatSettings": {
                                                            "type": "JsonWriteSettings"
                                                        }
                                                    },
                                                    "enableStaging": false
                                                },
                                                "inputs": [
                                                    {
                                                        "referenceName": "AzureSynapseAnalyticsTable",
                                                        "type": "DatasetReference",
                                                        "parameters": {
                                                            "tableName": {
                                                                "value": "@item().Table_Name",
                                                                "type": "Expression"
                                                            },
                                                            "schemaName": {
                                                                "value": "@item().table_schema",
                                                                "type": "Expression"
                                                            }
                                                        }
                                                    }
                                                ],
                                                "outputs": [
                                                    {
                                                        "referenceName": "BlobDataJson",
                                                        "type": "DatasetReference",
                                                        "parameters": {
                                                            "containerName": {
                                                                "value": "@pipeline().parameters.containerName",
                                                                "type": "Expression"
                                                            },
                                                            "datasetName": {
                                                                "value": "@concat(item().table_schema,'_',item().table_name,'.jsonl')",
                                                                "type": "Expression"
                                                            }
                                                        }
                                                    }
                                                ]
                                            },
                                            {
                                                "name": "AppendFileNamesvariable",
                                                "type": "AppendVariable",
                                                "dependsOn": [
                                                    {
                                                        "activity": "Copy data to blob storage",
                                                        "dependencyConditions": [
                                                            "Succeeded"
                                                        ]
                                                    }
                                                ],
                                                "userProperties": [],
                                                "typeProperties": {
                                                    "variableName": "fileNamesCopy",
                                                    "value": {
                                                        "value": "@concat(item().table_schema,'_',item().table_name,'.jsonl')",
                                                        "type": "Expression"
                                                    }
                                                }
                                            }
                                        ]
                                    }
                                },
                                {
                                    "name": "Set Files list",
                                    "type": "SetVariable",
                                    "dependsOn": [
                                        {
                                            "activity": "copy-each-table",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "userProperties": [],
                                    "typeProperties": {
                                        "variableName": "fileName",
                                        "value": {
                                            "value": "@join(variables('fileNamesCopy'),', ')",
                                            "type": "Expression"
                                        }
                                    }
                                },
                                {
                                    "name": "Send files list to logic app",
                                    "type": "WebActivity",
                                    "dependsOn": [
                                        {
                                            "activity": "Set Files list",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "url": "[listCallbackURL(resourceId('Microsoft.Logic/workflows/triggers', parameters('logicAppName'), 'manual'), '2019-05-01').value]",
                                        "connectVia": {
                                            "referenceName": "AutoResolveIntegrationRuntime",
                                            "type": "IntegrationRuntimeReference"
                                        },
                                        "method": "POST",
                                        "headers": {},
                                        "body": {
                                            "value": "{\n   \"Subject\": \"Data Copied Successfully Alert !\",\n   \"EmailTo\": \"@{pipeline().parameters.EmailTo}\",\n   \"DataFactoryName\": \"@{pipeline().DataFactory}\",\n   \"PipelineName\": \"@{pipeline().Pipeline}\",\n   \"FileNames\": \"@{variables('fileName')}\"\n}",
                                            "type": "Expression"
                                        }
                                    }
                                }
                            ],
                            "parameters": {
                                "containerName": {
                                    "type": "string",
                                    "defaultValue": "synapsesqlpooldata"
                                },
                                "EmailTo": {
                                    "type": "string",
                                    "defaultValue": ""
                                }
                            },
                            "variables": {
                                "fileNamesCopy": {
                                    "type": "Array"
                                },
                                "fileName": {
                                    "type": "String"
                                },
                                "schemaNameCopy": {
                                    "type": "Array"
                                },
                                "schemaName": {
                                    "type": "String"
                                }
                            },
                            "folder": {
                                "name": "SynapseDataExporter/ExportAllSchemasDataToJsonl"
                            },
                            "annotations": [],
                            "lastPublishTime": "2021-03-26T11:57:07Z"
                        },
                        "dependsOn": [
                            "[parameters('factoryName')]",
                            "[concat(variables('factoryId'), '/datasets/AzureSynapseAnalyticsTable')]",
                            "[concat(variables('factoryId'), '/integrationRuntimes/AutoResolveIntegrationRuntime')]",
                            "[concat(variables('factoryId'), '/datasets/BlobDataJson')]"
                        ]
                    },
                    {
                        "name": "[concat(parameters('factoryName'), '/AllTablesOfAllScehmasFromSynapseToBlobParquet')]",
                        "type": "Microsoft.DataFactory/factories/pipelines",
                        "apiVersion": "2018-06-01",
                        "properties": {
                            "activities": [
                                {
                                    "name": "get-tables",
                                    "type": "Lookup",
                                    "dependsOn": [],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "source": {
                                            "type": "SqlDWSource",
                                            "sqlReaderQuery": {
                                                "value": "select * from synapsesqlpool.INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE='BASE TABLE'",
                                                "type": "Expression"
                                            },
                                            "queryTimeout": "02:00:00",
                                            "partitionOption": "None"
                                        },
                                        "dataset": {
                                            "referenceName": "AzureSynapseAnalyticsTable",
                                            "type": "DatasetReference",
                                            "parameters": {
                                                "tableName": "value from query",
                                                "schemaName": "value from quwry"
                                            }
                                        },
                                        "firstRowOnly": false
                                    }
                                },
                                {
                                    "name": "copy-each-table",
                                    "type": "ForEach",
                                    "dependsOn": [
                                        {
                                            "activity": "get-tables",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "userProperties": [],
                                    "typeProperties": {
                                        "items": {
                                            "value": "@activity('get-tables').output.value",
                                            "type": "Expression"
                                        },
                                        "activities": [
                                            {
                                                "name": "Copy data to blob storage",
                                                "type": "Copy",
                                                "dependsOn": [],
                                                "policy": {
                                                    "timeout": "7.00:00:00",
                                                    "retry": 0,
                                                    "retryIntervalInSeconds": 30,
                                                    "secureOutput": false,
                                                    "secureInput": false
                                                },
                                                "userProperties": [],
                                                "typeProperties": {
                                                    "source": {
                                                        "type": "SqlDWSource",
                                                        "queryTimeout": "02:00:00",
                                                        "partitionOption": "None"
                                                    },
                                                    "sink": {
                                                        "type": "ParquetSink",
                                                        "storeSettings": {
                                                            "type": "AzureBlobStorageWriteSettings"
                                                        },
                                                        "formatSettings": {
                                                            "type": "ParquetWriteSettings"
                                                        }
                                                    },
                                                    "enableStaging": false,
                                                    "translator": {
                                                        "type": "TabularTranslator",
                                                        "typeConversion": true,
                                                        "typeConversionSettings": {
                                                            "allowDataTruncation": true,
                                                            "treatBooleanAsNumber": false
                                                        }
                                                    }
                                                },
                                                "inputs": [
                                                    {
                                                        "referenceName": "AzureSynapseAnalyticsTable",
                                                        "type": "DatasetReference",
                                                        "parameters": {
                                                            "tableName": {
                                                                "value": "@item().Table_Name",
                                                                "type": "Expression"
                                                            },
                                                            "schemaName": {
                                                                "value": "@item().table_schema",
                                                                "type": "Expression"
                                                            }
                                                        }
                                                    }
                                                ],
                                                "outputs": [
                                                    {
                                                        "referenceName": "BlobDataParquet",
                                                        "type": "DatasetReference",
                                                        "parameters": {
                                                            "containerName": {
                                                                "value": "@pipeline().parameters.containerName",
                                                                "type": "Expression"
                                                            },
                                                            "datasetName": {
                                                                "value": "@concat(item().table_schema,'_',item().table_name,'.parquet')",
                                                                "type": "Expression"
                                                            }
                                                        }
                                                    }
                                                ]
                                            },
                                            {
                                                "name": "AppendFileNamesvariable",
                                                "type": "AppendVariable",
                                                "dependsOn": [
                                                    {
                                                        "activity": "Copy data to blob storage",
                                                        "dependencyConditions": [
                                                            "Succeeded"
                                                        ]
                                                    }
                                                ],
                                                "userProperties": [],
                                                "typeProperties": {
                                                    "variableName": "fileNamesCopy",
                                                    "value": {
                                                        "value": "@concat(item().table_schema,'_',item().table_name,'.parquet')",
                                                        "type": "Expression"
                                                    }
                                                }
                                            }
                                        ]
                                    }
                                },
                                {
                                    "name": "Set Files list",
                                    "type": "SetVariable",
                                    "dependsOn": [
                                        {
                                            "activity": "copy-each-table",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "userProperties": [],
                                    "typeProperties": {
                                        "variableName": "fileName",
                                        "value": {
                                            "value": "@join(variables('fileNamesCopy'),', ')",
                                            "type": "Expression"
                                        }
                                    }
                                },
                                {
                                    "name": "Send files list to logic app",
                                    "type": "WebActivity",
                                    "dependsOn": [
                                        {
                                            "activity": "Set Files list",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "url": "[listCallbackURL(resourceId('Microsoft.Logic/workflows/triggers', parameters('logicAppName'), 'manual'), '2019-05-01').value]",
                                        "connectVia": {
                                            "referenceName": "AutoResolveIntegrationRuntime",
                                            "type": "IntegrationRuntimeReference"
                                        },
                                        "method": "POST",
                                        "headers": {},
                                        "body": {
                                            "value": "{\n   \"Subject\": \"Data Copied Successfully Alert !\",\n   \"EmailTo\": \"@{pipeline().parameters.EmailTo}\",\n   \"DataFactoryName\": \"@{pipeline().DataFactory}\",\n   \"PipelineName\": \"@{pipeline().Pipeline}\",\n   \"FileNames\": \"@{variables('fileName')}\"\n}",
                                            "type": "Expression"
                                        }
                                    }
                                }
                            ],
                            "parameters": {
                                "containerName": {
                                    "type": "string",
                                    "defaultValue": "synapsesqlpooldata"
                                },
                                "EmailTo": {
                                    "type": "string",
                                    "defaultValue": ""
                                }
                            },
                            "variables": {
                                "fileNamesCopy": {
                                    "type": "Array"
                                },
                                "fileName": {
                                    "type": "String"
                                },
                                "schemaNameCopy": {
                                    "type": "Array"
                                },
                                "schemaName": {
                                    "type": "String"
                                }
                            },
                            "folder": {
                                "name": "SynapseDataExporter/ExportAllSchemasDataToParquet"
                            },
                            "annotations": [],
                            "lastPublishTime": "2021-03-24T12:31:35Z"
                        },
                        "dependsOn": [
                            "[parameters('factoryName')]",
                            "[concat(variables('factoryId'), '/datasets/AzureSynapseAnalyticsTable')]",
                            "[concat(variables('factoryId'), '/integrationRuntimes/AutoResolveIntegrationRuntime')]",
                            "[concat(variables('factoryId'), '/datasets/BlobDataParquet')]"
                        ]
                    }

            ]
        }
    ],
    "outputs": {}
}
