{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "factoryName": {
            "type": "string",
            "metadata": "Data Factory name",
            "defaultValue": "synapsetoblobadf"
        },
        "location": {
            "type": "string",
            "defaultValue": "eastus",
            "metadata": {
            "description": "Location of your resources. Default location is eastUS"
            }
         },

          "existingOrNewStorage": {
            "allowedValues": [ "new", "existing" ],
            "type": "string",
            "metadata": {
                "description": "Do you want to create new storage account or use same storage account?"
            }
        },

        "storageAccountName": {
            "type": "string",
            "metadata": {
            "description": "The storage account name can contain only lowercase letters and numbers. Name must be between 1 and 11 characters"
            }
        },
        
        "sqlDBPoolName": {
            "type": "string",
            "defaultValue": "synapsesqlpool",
            "metadata": {
            "description": "Database name should not match special patterns,The value has a length of at most 115. Database name should not contain reserved words.No database with the same name exists in the server"
            }
        },
        "synapseWorkSpaceName": {
            "type": "string",
            "defaultValue": "testsynapsews",
            "metadata": {
            "description": "Server name must be at least 1 characters and at most 50 characters. Server name must only contain lowercase letters, numbers, and hyphens. The server name must not start or end in a hyphen."
            } 
        },

       "administratorLogin": {
             "type": "string",
             "metadata": {
             "description": "Your login name must not contain a SQL Identifier or a typical system name (like admin, administrator, sa, root, dbmanager, loginmanager, etc.) or a built-in database user or role (like dbo, guest, public, etc.). "
             }
        },
       "administratorLoginPassword": {
            "type": "securestring",
             "metadata": {
             "description": "Your password must be at least 8 characters in length. It must be no more than 128 characters in length.Your password must contain characters from three of the following categories â€“ English uppercase letters, English lowercase letters, numbers (0-9), and non-alphanumeric characters (!, $, #, %, etc.). Your password cannot contain all or part of the login name. Part of a login name is defined as three or more consecutive alphanumeric characters."
              }
        },
        "schemaName": {
            "type": "string",
            "defaultValue": "covid"
            },
        "tableName": {
            "type": "string",
            "defaultValue": "covid_british_columbia"
            },
        "containerName": {
            "type": "string",
            "defaultValue": "synapsesqlpooldata"
            },
        "datasetName": {
            "type": "string",
            "defaultValue": "covid_british_columbia.csv"
            },
         "emailForAlerts": {
            "type": "String"
        },
        "logicAppName": {
            "defaultValue": "TeamsNotify",
            "type": "String"
        }
    },
    "variables": {
        "actionGroupsName":"actionalerts",
        "factoryId": "[resourceId('Microsoft.DataFactory/factories/', parameters('factoryName'))]",
        "storageAccountId": "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccountName'))]",
        "fullyQualifiedDomainName": ".sql.azuresynapse.net"
    },
    "resources": [

        {
            "type": "Microsoft.DataFactory/factories",
            "apiVersion": "2018-06-01",
            "name": "[parameters('factoryName')]",
            "location": "[parameters('location')]",
            "properties": {},
            "identity": {
                "type": "SystemAssigned"
                 }
        },

        {
            "condition": "[equals(parameters('existingOrNewStorage'),'new')]",
            "type": "Microsoft.Storage/storageAccounts",
            "apiVersion": "2019-06-01",
            "name": "[parameters('storageAccountName')]",
            "location": "[parameters('location')]",
            "sku": {
                 "name": "Standard_LRS"
                },
            "kind": "StorageV2",
            "properties": {}
       },
  
        {
            "name": "[concat(parameters('factoryName'), '/AutoResolveIntegrationRuntime')]",
            "type": "Microsoft.DataFactory/factories/integrationRuntimes",
            "apiVersion": "2018-06-01",
            "properties": {
                "type": "Managed",
                "typeProperties": {
                    "computeProperties": {
                        "location": "AutoResolve",
                        "dataFlowProperties": {
                            "computeType": "General",
                            "coreCount": 8,
                            "timeToLive": 0
                        }
                    }
                }
            },
            "dependsOn": [
                "[parameters('factoryName')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/AzureBlobStorageLinkedService')]",
            "type": "Microsoft.DataFactory/factories/linkedServices",
            "apiVersion": "2018-06-01",
            "properties": {
                "annotations": [],
                "type": "AzureBlobStorage",
                "typeProperties": {
                    "connectionString": "[concat('DefaultEndpointsProtocol=https;AccountName=',parameters('storageAccountName'),';AccountKey=',listKeys(variables('storageAccountId'), '2019-06-01').keys[0].value)]"
                },
                "connectVia": {
                    "referenceName": "AutoResolveIntegrationRuntime",
                    "type": "IntegrationRuntimeReference"
                }
            },
            "dependsOn": [
                "[parameters('factoryName')]",
                "[concat(variables('factoryId'), '/integrationRuntimes/AutoResolveIntegrationRuntime')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/AzureSynapseAnalyticsLinkedService')]",
            "type": "Microsoft.DataFactory/factories/linkedServices",
            "apiVersion": "2018-06-01",
            "properties": {
                "annotations": [],
                "type": "AzureSqlDW",
                "typeProperties": {
                    "connectionString": "[concat('Server=tcp:',parameters('synapseWorkSpaceName'), variables('fullyQualifiedDomainName'), ',1433;Initial Catalog=', parameters('sqlDBPoolName'), ';User Id=', parameters('administratorLogin'), '@', parameters('synapseWorkSpaceName'), ';Password=', parameters('administratorLoginPassword'), ';Trusted_Connection=False;Encrypt=True;Connection Timeout=30;MultipleActiveResultSets=True')]"
                },
                "connectVia": {
                    "referenceName": "AutoResolveIntegrationRuntime",
                    "type": "IntegrationRuntimeReference"
                }
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/integrationRuntimes/AutoResolveIntegrationRuntime')]"
            ]
        },
         {
            "name": "[concat(parameters('factoryName'), '/AzureSynapseAnalyticsTable')]",
            "type": "Microsoft.DataFactory/factories/datasets",
            "apiVersion": "2018-06-01",
            "properties": {
                "linkedServiceName": {
                    "referenceName": "AzureSynapseAnalyticsLinkedService",
                    "type": "LinkedServiceReference"
                },
                "parameters": {
                    "tableName": {
                        "type": "string"
                    },
                    "schemaName": {
                        "type": "string"
                    }
                },
                "folder": {
                    "name": "synapse_dataset"
                },
                "annotations": [],
                "type": "AzureSqlDWTable",
                "schema": [],
                "typeProperties": {
                    "schema": {
                        "value": "@dataset().schemaName",
                        "type": "Expression"
                    },
                    "table": {
                        "value": "@dataset().tableName",
                        "type": "Expression"
                    }
                }
            },
            "dependsOn": [
                "[parameters('factoryName')]",
                "[concat(variables('factoryId'), '/linkedServices/AzureSynapseAnalyticsLinkedService')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/BlobData')]",
            "type": "Microsoft.DataFactory/factories/datasets",
            "apiVersion": "2018-06-01",
            "properties": {
                "linkedServiceName": {
                    "referenceName": "AzureBlobStorageLinkedService",
                    "type": "LinkedServiceReference"
                },
                "parameters": {
                    "containerName": {
                        "type": "string"
                    },
                    "datasetName": {
                        "type": "string"
                    }
                },
                "folder": {
                    "name": "csv_dataset"
                },
                "annotations": [],
                "type": "DelimitedText",
                "typeProperties": {
                    "location": {
                        "type": "AzureBlobStorageLocation",
                        "fileName": {
                            "value": "@dataset().datasetName",
                            "type": "Expression"
                        },
                        "container": {
                            "value": "@dataset().containerName",
                            "type": "Expression"
                        }
                    },
                    "columnDelimiter": ",",
                    "escapeChar": "\\",
                    "firstRowAsHeader": true,
                    "quoteChar": "\""
                },
                "schema": []
            },
            "dependsOn": [
                "[parameters('factoryName')]",
                "[concat(variables('factoryId'), '/linkedServices/AzureBlobStorageLinkedService')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/BlobDataParquet')]",
            "type": "Microsoft.DataFactory/factories/datasets",
            "apiVersion": "2018-06-01",
            "properties": {
                "linkedServiceName": {
                    "referenceName": "AzureBlobStorageLinkedService",
                    "type": "LinkedServiceReference"
                },
                "parameters": {
                    "containerName": {
                        "type": "string"
                    },
                    "datasetName": {
                        "type": "string"
                    }
                },
                "folder": {
                    "name": "parquet_dataset"
                },
                "annotations": [],
                "type": "Parquet",
                "typeProperties": {
                    "location": {
                        "type": "AzureBlobStorageLocation",
                        "fileName": {
                            "value": "@dataset().datasetName",
                            "type": "Expression"
                        },
                        "container": {
                            "value": "@dataset().containerName",
                            "type": "Expression"
                        }
                    },
                    "compressionCodec": "snappy"
                },
                "schema": []
            },
            "dependsOn": [
                "[parameters('factoryName')]",
                "[concat(variables('factoryId'), '/linkedServices/AzureBlobStorageLinkedService')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/BlobDataJson')]",
            "type": "Microsoft.DataFactory/factories/datasets",
            "apiVersion": "2018-06-01",
            "properties": {
                "linkedServiceName": {
                    "referenceName": "AzureBlobStorageLinkedService",
                    "type": "LinkedServiceReference"
                },
                "parameters": {
                    "containerName": {
                        "type": "string"
                    },
                    "datasetName": {
                        "type": "string"
                    }
                },
                "folder": {
                    "name": "json_dataset"
                },
                "annotations": [],
                "type": "Json",
                "typeProperties": {
                    "location": {
                        "type": "AzureBlobStorageLocation",
                        "fileName": {
                            "value": "@dataset().datasetName",
                            "type": "Expression"
                        },
                        "container": {
                            "value": "@dataset().containerName",
                            "type": "Expression"
                        }
                    }
                },
                "schema": {}
            },
            "dependsOn": [
                "[parameters('factoryName')]",
                "[concat(variables('factoryId'), '/linkedServices/AzureBlobStorageLinkedService')]"
            ]
        },
    {
            "name": "[concat(parameters('factoryName'), '/SynapseToBlobpipeline')]",
            "type": "Microsoft.DataFactory/factories/pipelines",
            "apiVersion": "2018-06-01",
            "properties": {
                "activities": [
                    {
                        "name": "SynapseSqlpoolToBlobStorage",
                        "type": "Copy",
                        "dependsOn": [],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "SqlDWSource",
                                "queryTimeout": "02:00:00",
                                "partitionOption": "None"
                            },
                            "sink": {
                                "type": "DelimitedTextSink",
                                "storeSettings": {
                                    "type": "AzureBlobStorageWriteSettings"
                                },
                                "formatSettings": {
                                    "type": "DelimitedTextWriteSettings",
                                    "quoteAllText": true,
                                    "fileExtension": ".txt"
                                }
                            },
                            "enableStaging": true,
                            "stagingSettings": {
                                "linkedServiceName": {
                                    "referenceName": "AzureBlobStorageLinkedService",
                                    "type": "LinkedServiceReference"
                                },
                                "path": "output"
                            },
                            "translator": {
                                "type": "TabularTranslator",
                                "mappings": [
                                    {
                                        "source": {
                                            "name": "Date",
                                            "type": "String",
                                            "physicalType": "varchar"
                                        },
                                        "sink": {
                                            "name": "Date",
                                            "type": "String",
                                            "physicalType": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "Region",
                                            "type": "String",
                                            "physicalType": "varchar"
                                        },
                                        "sink": {
                                            "name": "Region",
                                            "type": "String",
                                            "physicalType": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "New_Tests",
                                            "type": "Int32",
                                            "physicalType": "int"
                                        },
                                        "sink": {
                                            "name": "New_Tests",
                                            "type": "Int32",
                                            "physicalType": "Int32"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "Total_Tests",
                                            "type": "Int32",
                                            "physicalType": "int"
                                        },
                                        "sink": {
                                            "name": "Total_Tests",
                                            "type": "Int32",
                                            "physicalType": "Int32"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "Positivity",
                                            "type": "Decimal",
                                            "physicalType": "decimal",
                                            "scale": 0,
                                            "precision": 18
                                        },
                                        "sink": {
                                            "name": "Positivity",
                                            "type": "Decimal",
                                            "physicalType": "Decimal"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "Turn_Around",
                                            "type": "Decimal",
                                            "physicalType": "decimal",
                                            "scale": 0,
                                            "precision": 18
                                        },
                                        "sink": {
                                            "name": "Turn_Around",
                                            "type": "Decimal",
                                            "physicalType": "Decimal"
                                        }
                                    }
                                ],
                                "typeConversion": true,
                                "typeConversionSettings": {
                                    "allowDataTruncation": true,
                                    "treatBooleanAsNumber": false
                                }
                            }
                        },
                        "inputs": [
                            {
                                "referenceName": "AzureSynapseAnalyticsTable",
                                "type": "DatasetReference",
                                "parameters": {
                                    "tableName": {
                                        "value": "@pipeline().parameters.tableName",
                                        "type": "Expression"
                                    },
                                    "schemaName": {
                                        "value": "@pipeline().parameters.schemaName",
                                        "type": "Expression"
                                    }
                                }
                            }
                        ],
                        "outputs": [
                            {
                                "referenceName": "BlobData",
                                "type": "DatasetReference",
                                "parameters": {
                                    "containerName": {
                                        "value": "@pipeline().parameters.containerName",
                                        "type": "Expression"
                                    },
                                    "datasetName": {
                                        "value": "@pipeline().parameters.datasetName",
                                        "type": "Expression"
                                    }
                                }
                            }
                        ]
                    },
                    {
                        "name": "Send file name to applogic",
                        "type": "WebActivity",
                        "dependsOn": [
                            {
                                "activity": "SynapseSqlpoolToBlobStorage",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "url": "[listCallbackURL(resourceId('Microsoft.Logic/workflows/triggers', parameters('logicAppName'), 'manual'), '2019-05-01').value]",
                            "connectVia": {
                                "referenceName": "AutoResolveIntegrationRuntime",
                                "type": "IntegrationRuntimeReference"
                            },
                            "method": "POST",
                            "headers": {},
                            "body": {
                                "value": "{\n   \"DataFactoryName\": \"@{pipeline().DataFactory}\",\n   \"PipelineName\": \"@{pipeline().Pipeline}\",\n   \"Schema\": \"@{pipeline().parameters.schemaName}\",\n   \"FileNames\": \"@{concat(pipeline().parameters.tableName,'.csv')}\"\n}",
                                "type": "Expression"
                            }
                        }
                    }
                ],
                "parameters": {
                    "schemaName": {
                        "type": "string",
                        "defaultValue": "covid"
                    },
                    "tableName": {
                        "type": "string",
                        "defaultValue": "covid_british_columbia"
                    },
                    "containerName": {
                        "type": "string",
                        "defaultValue": "synapsesqlpooldata"
                    },
                    "datasetName": {
                        "type": "string",
                        "defaultValue": "covid_british_columbia.csv"
                    }
                },
                "folder": {
                    "name": "SynapseDataExporter/csv"
                },
                "annotations": [],
                "lastPublishTime": "2021-03-24T10:58:22Z"
            },
            "dependsOn": [
                "[parameters('factoryName')]",
                "[concat(variables('factoryId'), '/datasets/AzureSynapseAnalyticsTable')]",
                "[concat(variables('factoryId'), '/datasets/BlobData')]",
                "[concat(variables('factoryId'), '/integrationRuntimes/AutoResolveIntegrationRuntime')]",
                "[concat(variables('factoryId'), '/linkedServices/AzureBlobStorageLinkedService')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/SynapseToBlobpipeline_Json')]",
            "type": "Microsoft.DataFactory/factories/pipelines",
            "apiVersion": "2018-06-01",
            "properties": {
                "activities": [
                    {
                        "name": "SynapseSqlpoolToBlobStorage",
                        "type": "Copy",
                        "dependsOn": [],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "SqlDWSource",
                                "queryTimeout": "02:00:00",
                                "partitionOption": "None"
                            },
                            "sink": {
                                "type": "JsonSink",
                                "storeSettings": {
                                    "type": "AzureBlobStorageWriteSettings"
                                },
                                "formatSettings": {
                                    "type": "JsonWriteSettings"
                                }
                            },
                            "enableStaging": true,
                            "stagingSettings": {
                                "linkedServiceName": {
                                    "referenceName": "AzureBlobStorageLinkedService",
                                    "type": "LinkedServiceReference"
                                },
                                "path": "output"
                            },
                            "translator": {
                                "type": "TabularTranslator",
                                "mappings": [
                                    {
                                        "source": {
                                            "name": "Date",
                                            "type": "String"
                                        },
                                        "sink": {
                                            "path": "$['Date']"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "Region",
                                            "type": "String"
                                        },
                                        "sink": {
                                            "path": "$['Region']"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "New_Tests",
                                            "type": "Int32"
                                        },
                                        "sink": {
                                            "path": "$['New_Tests']"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "Total_Tests",
                                            "type": "Int32"
                                        },
                                        "sink": {
                                            "path": "$['Total_Tests']"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "Positivity",
                                            "type": "Int32"
                                        },
                                        "sink": {
                                            "path": "$['Positivity']"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "Turn_Around",
                                            "type": "Int32"
                                        },
                                        "sink": {
                                            "path": "$['Turn_Around']"
                                        }
                                    }
                                ]
                            }
                        },
                        "inputs": [
                            {
                                "referenceName": "AzureSynapseAnalyticsTable",
                                "type": "DatasetReference",
                                "parameters": {
                                    "tableName": {
                                        "value": "@pipeline().parameters.tableName",
                                        "type": "Expression"
                                    },
                                    "schemaName": {
                                        "value": "@pipeline().parameters.schemaName",
                                        "type": "Expression"
                                    }
                                }
                            }
                        ],
                        "outputs": [
                            {
                                "referenceName": "BlobDataJson",
                                "type": "DatasetReference",
                                "parameters": {
                                    "containerName": {
                                        "value": "@pipeline().parameters.containerName",
                                        "type": "Expression"
                                    },
                                    "datasetName": {
                                        "value": "@pipeline().parameters.datasetName",
                                        "type": "Expression"
                                    }
                                }
                            }
                        ]
                    },
                    {
                        "name": "Send file name to applogic",
                        "type": "WebActivity",
                        "dependsOn": [
                            {
                                "activity": "SynapseSqlpoolToBlobStorage",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "url": "[listCallbackURL(resourceId('Microsoft.Logic/workflows/triggers', parameters('logicAppName'), 'manual'), '2019-05-01').value]",
                            "connectVia": {
                                "referenceName": "AutoResolveIntegrationRuntime",
                                "type": "IntegrationRuntimeReference"
                            },
                            "method": "POST",
                            "headers": {},
                            "body": {
                                "value": "{\n   \"DataFactoryName\": \"@{pipeline().DataFactory}\",\n   \"PipelineName\": \"@{pipeline().Pipeline}\",\n   \"Schema\": \"@{pipeline().parameters.schemaName}\",\n   \"FileNames\": \"@{concat(pipeline().parameters.tableName,'.json')}\"\n}",
                                "type": "Expression"
                            }
                        }
                    }
                ],
                "parameters": {
                    "schemaName": {
                        "type": "string",
                        "defaultValue": "covid"
                    },
                    "tableName": {
                        "type": "string",
                        "defaultValue": "covid_british_columbia"
                    },
                    "containerName": {
                        "type": "string",
                        "defaultValue": "synapsesqlpooldata"
                    },
                    "datasetName": {
                        "type": "string",
                        "defaultValue": "covid_british_columbia.json"
                    }
                },
                "folder": {
                    "name": "SynapseDataExporter/json"
                },
                "annotations": [],
                "lastPublishTime": "2021-03-24T10:58:22Z"
            },
            "dependsOn": [
                "[parameters('factoryName')]",
                "[concat(variables('factoryId'), '/datasets/AzureSynapseAnalyticsTable')]",
                "[concat(variables('factoryId'), '/datasets/BlobDataJson')]",
                "[concat(variables('factoryId'), '/integrationRuntimes/AutoResolveIntegrationRuntime')]",
                "[concat(variables('factoryId'), '/linkedServices/AzureBlobStorageLinkedService')]"
            ]
        },

        {
            "name": "[concat(parameters('factoryName'), '/SynapseToBlobpipeline_Jsonl')]",
            "type": "Microsoft.DataFactory/factories/pipelines",
            "apiVersion": "2018-06-01",
            "properties": {
                "activities": [
                    {
                        "name": "SynapseSqlpoolToBlobStorage",
                        "type": "Copy",
                        "dependsOn": [],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "SqlDWSource",
                                "queryTimeout": "02:00:00",
                                "partitionOption": "None"
                            },
                            "sink": {
                                "type": "JsonSink",
                                "storeSettings": {
                                    "type": "AzureBlobStorageWriteSettings"
                                },
                                "formatSettings": {
                                    "type": "JsonWriteSettings"
                                }
                            },
                            "enableStaging": true,
                            "stagingSettings": {
                                "linkedServiceName": {
                                    "referenceName": "AzureBlobStorageLinkedService",
                                    "type": "LinkedServiceReference"
                                },
                                "path": "output"
                            },
                            "translator": {
                                "type": "TabularTranslator",
                                "mappings": [
                                    {
                                        "source": {
                                            "name": "Date",
                                            "type": "String"
                                        },
                                        "sink": {
                                            "path": "$['Date']"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "Region",
                                            "type": "String"
                                        },
                                        "sink": {
                                            "path": "$['Region']"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "New_Tests",
                                            "type": "Int32"
                                        },
                                        "sink": {
                                            "path": "$['New_Tests']"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "Total_Tests",
                                            "type": "Int32"
                                        },
                                        "sink": {
                                            "path": "$['Total_Tests']"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "Positivity",
                                            "type": "Int32"
                                        },
                                        "sink": {
                                            "path": "$['Positivity']"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "Turn_Around",
                                            "type": "Int32"
                                        },
                                        "sink": {
                                            "path": "$['Turn_Around']"
                                        }
                                    }
                                ]
                            }
                        },
                        "inputs": [
                            {
                                "referenceName": "AzureSynapseAnalyticsTable",
                                "type": "DatasetReference",
                                "parameters": {
                                    "tableName": {
                                        "value": "@pipeline().parameters.tableName",
                                        "type": "Expression"
                                    },
                                    "schemaName": {
                                        "value": "@pipeline().parameters.schemaName",
                                        "type": "Expression"
                                    }
                                }
                            }
                        ],
                        "outputs": [
                            {
                                "referenceName": "BlobDataJson",
                                "type": "DatasetReference",
                                "parameters": {
                                    "containerName": {
                                        "value": "@pipeline().parameters.containerName",
                                        "type": "Expression"
                                    },
                                    "datasetName": {
                                        "value": "@pipeline().parameters.datasetName",
                                        "type": "Expression"
                                    }
                                }
                            }
                        ]
                    },
                    {
                        "name": "Send file name to applogic",
                        "type": "WebActivity",
                        "dependsOn": [
                            {
                                "activity": "SynapseSqlpoolToBlobStorage",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "url": "[listCallbackURL(resourceId('Microsoft.Logic/workflows/triggers', parameters('logicAppName'), 'manual'), '2019-05-01').value]",
                            "connectVia": {
                                "referenceName": "AutoResolveIntegrationRuntime",
                                "type": "IntegrationRuntimeReference"
                            },
                            "method": "POST",
                            "headers": {},
                            "body": {
                                "value": "{\n   \"DataFactoryName\": \"@{pipeline().DataFactory}\",\n   \"PipelineName\": \"@{pipeline().Pipeline}\",\n   \"Schema\": \"@{pipeline().parameters.schemaName}\",\n   \"FileNames\": \"@{concat(pipeline().parameters.tableName,'.jsonl')}\"\n}",
                                "type": "Expression"
                            }
                        }
                    }
                ],
                "parameters": {
                    "schemaName": {
                        "type": "string",
                        "defaultValue": "covid"
                    },
                    "tableName": {
                        "type": "string",
                        "defaultValue": "covid_british_columbia"
                    },
                    "containerName": {
                        "type": "string",
                        "defaultValue": "synapsesqlpooldata"
                    },
                    "datasetName": {
                        "type": "string",
                        "defaultValue": "covid_british_columbia.jsonl"
                    }
                },
                "folder": {
                    "name": "SynapseDataExporter/jsonl"
                },
                "annotations": [],
                "lastPublishTime": "2021-03-30T10:17:31Z"
            },
            "dependsOn": [
                "[parameters('factoryName')]",
                "[concat(variables('factoryId'), '/datasets/AzureSynapseAnalyticsTable')]",
                "[concat(variables('factoryId'), '/datasets/BlobDataJson')]",
                "[concat(variables('factoryId'), '/integrationRuntimes/AutoResolveIntegrationRuntime')]",
                "[concat(variables('factoryId'), '/linkedServices/AzureBlobStorageLinkedService')]"
            ]
        },

        {
            "name": "[concat(parameters('factoryName'), '/SynapseToBlobpipeline_Parquet')]",
            "type": "Microsoft.DataFactory/factories/pipelines",
            "apiVersion": "2018-06-01",
            "properties": {
                "activities": [
                    {
                        "name": "SynapseSqlpoolToBlobStorage",
                        "type": "Copy",
                        "dependsOn": [],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "SqlDWSource",
                                "queryTimeout": "02:00:00",
                                "partitionOption": "None"
                            },
                            "sink": {
                                "type": "DelimitedTextSink",
                                "storeSettings": {
                                    "type": "AzureBlobStorageWriteSettings"
                                },
                                "formatSettings": {
                                    "type": "DelimitedTextWriteSettings",
                                    "quoteAllText": true,
                                    "fileExtension": ".txt"
                                }
                            },
                            "enableStaging": true,
                            "stagingSettings": {
                                "linkedServiceName": {
                                    "referenceName": "AzureBlobStorageLinkedService",
                                    "type": "LinkedServiceReference"
                                },
                                "path": "output"
                            },
                            "translator": {
                                "type": "TabularTranslator",
                                "mappings": [
                                    {
                                        "source": {
                                            "name": "Date",
                                            "type": "String",
                                            "physicalType": "varchar"
                                        },
                                        "sink": {
                                            "name": "Date",
                                            "type": "String",
                                            "physicalType": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "Region",
                                            "type": "String",
                                            "physicalType": "varchar"
                                        },
                                        "sink": {
                                            "name": "Region",
                                            "type": "String",
                                            "physicalType": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "New_Tests",
                                            "type": "Int32",
                                            "physicalType": "int"
                                        },
                                        "sink": {
                                            "name": "New_Tests",
                                            "type": "Int32",
                                            "physicalType": "Int32"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "Total_Tests",
                                            "type": "Int32",
                                            "physicalType": "int"
                                        },
                                        "sink": {
                                            "name": "Total_Tests",
                                            "type": "Int32",
                                            "physicalType": "Int32"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "Positivity",
                                            "type": "Decimal",
                                            "physicalType": "decimal",
                                            "scale": 0,
                                            "precision": 18
                                        },
                                        "sink": {
                                            "name": "Positivity",
                                            "type": "Decimal",
                                            "physicalType": "Decimal"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "Turn_Around",
                                            "type": "Decimal",
                                            "physicalType": "decimal",
                                            "scale": 0,
                                            "precision": 18
                                        },
                                        "sink": {
                                            "name": "Turn_Around",
                                            "type": "Decimal",
                                            "physicalType": "Decimal"
                                        }
                                    }
                                ],
                                "typeConversion": true,
                                "typeConversionSettings": {
                                    "allowDataTruncation": true,
                                    "treatBooleanAsNumber": false
                                }
                            }
                        },
                        "inputs": [
                            {
                                "referenceName": "AzureSynapseAnalyticsTable",
                                "type": "DatasetReference",
                                "parameters": {
                                    "tableName": {
                                        "value": "@pipeline().parameters.tableName",
                                        "type": "Expression"
                                    },
                                    "schemaName": {
                                        "value": "@pipeline().parameters.schemaName",
                                        "type": "Expression"
                                    }
                                }
                            }
                        ],
                        "outputs": [
                            {
                                "referenceName": "BlobData",
                                "type": "DatasetReference",
                                "parameters": {
                                    "containerName": {
                                        "value": "@pipeline().parameters.containerName",
                                        "type": "Expression"
                                    },
                                    "datasetName": {
                                        "value": "@pipeline().parameters.datasetName",
                                        "type": "Expression"
                                    }
                                }
                            }
                        ]
                    },
                    {
                        "name": "Send file name to applogic",
                        "type": "WebActivity",
                        "dependsOn": [
                            {
                                "activity": "SynapseSqlpoolToBlobStorage",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "url": "[listCallbackURL(resourceId('Microsoft.Logic/workflows/triggers', parameters('logicAppName'), 'manual'), '2019-05-01').value]",
                            "connectVia": {
                                "referenceName": "AutoResolveIntegrationRuntime",
                                "type": "IntegrationRuntimeReference"
                            },
                            "method": "POST",
                            "headers": {},
                            "body": {
                                "value": "{\n   \"DataFactoryName\": \"@{pipeline().DataFactory}\",\n   \"PipelineName\": \"@{pipeline().Pipeline}\",\n   \"Schema\": \"@{pipeline().parameters.schemaName}\",\n   \"FileNames\": \"@{concat(pipeline().parameters.tableName,'.parquet')}\"\n}",
                                "type": "Expression"
                            }
                        }
                    }
                ],
                "parameters": {
                    "schemaName": {
                        "type": "string",
                        "defaultValue": "covid"
                    },
                    "tableName": {
                        "type": "string",
                        "defaultValue": "covid_british_columbia"
                    },
                    "containerName": {
                        "type": "string",
                        "defaultValue": "synapsesqlpooldata"
                    },
                    "datasetName": {
                        "type": "string",
                        "defaultValue": "covid_british_columbia.parquet"
                    }
                },
                "folder": {
                    "name": "SynapseDataExporter/parquet"
                },
                "annotations": [],
                "lastPublishTime": "2021-03-24T10:58:22Z"
            },
            "dependsOn": [
                "[parameters('factoryName')]",
                "[concat(variables('factoryId'), '/datasets/AzureSynapseAnalyticsTable')]",
                "[concat(variables('factoryId'), '/datasets/BlobData')]",
                "[concat(variables('factoryId'), '/integrationRuntimes/AutoResolveIntegrationRuntime')]",
                "[concat(variables('factoryId'), '/linkedServices/AzureBlobStorageLinkedService')]"
            ]
        },
      
            {
            "type": "microsoft.insights/actionGroups",
            "apiVersion": "2019-03-01",
            "name": "[variables('actionGroupsName')]",
            "location": "Global",
            "properties": {
                "groupShortName": "alertAsad",
                "enabled": true,
                "emailReceivers": [
                    {
                        "name": "AlertsOnEmail",
                        "emailAddress": "[parameters('emailForAlerts')]",
                        "useCommonAlertSchema": false
                    }
                ],
                "smsReceivers": [],
                "webhookReceivers": [],
                "itsmReceivers": [],
                "azureAppPushReceivers": [],
                "automationRunbookReceivers": [],
                "voiceReceivers": [],
                "logicAppReceivers": [],
                "azureFunctionReceivers": []
            },
            "dependsOn": [
                "[parameters('factoryName')]",
                "[concat(variables('factoryId'), '/datasets/AzureSynapseAnalyticsTable')]",
                "[concat(variables('factoryId'), '/datasets/BlobData')]"
            ]
        },
         {
            "type": "Microsoft.Web/connections",
            "apiVersion": "2018-07-01-preview",
            "location": "[parameters('location')]",
            "name": "msftTeamsConnectionAuth",
            "properties": {
                "api": {
                    "id": "[subscriptionResourceId('Microsoft.Web/locations/managedApis', parameters('location'), 'teams')]"
                },
                "displayName": "msftTeamsConnectionAuth"
            }
        },

                {
            "type": "Microsoft.Logic/workflows",
            "apiVersion": "2017-07-01",
            "name": "[parameters('logicAppName')]",
            "location": "eastus",
            "dependsOn": [
                "[resourceId('Microsoft.Web/connections', 'msftTeamsConnectionAuth')]"
            ],
            "properties": {
                "state": "Enabled",
                "definition": {
                    "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
                    "contentVersion": "1.0.0.0",
                    "parameters": {
                        "$connections": {
                            "defaultValue": {},
                            "type": "Object"
                        }
                    },
                    "triggers": {
                        "manual": {
                            "type": "Request",
                            "kind": "Http",
                            "inputs": {
                                "schema": {
                                    "properties": {
                                        "DataFactoryName": {
                                            "type": "string"
                                        },
                                        "FileNames": {
                                            "type": "array"
                                        },
                                        "PipelineName": {
                                            "type": "string"
                                        },
                                        "Schema": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "actions": {
                        "Post_a_message_(V3)": {
                            "runAfter": {},
                            "type": "ApiConnection",
                            "inputs": {
                                "body": {
                                    "body": {
                                        "content": "<p><strong>Below is the information of files copied from synapse to blob storage<br>\n<br>\nData Factory Name</strong>: @{triggerBody()?['DataFactoryName']}<br>\n<strong>Pipeline Name</strong>:  @{triggerBody()?['PipelineName']}<br>\n<strong>Schema</strong>: @{triggerBody()?['Schema']}<br>\n<strong>File Name</strong>: @{triggerBody()?['FileNames']}</p>",
                                        "contentType": "html"
                                    }
                                },
                                "host": {
                                    "connection": {
                                        "name": "@parameters('$connections')['teams']['connectionId']"
                                    }
                                },
                                "method": "post",
                                "path": "/v3/beta/teams/@{encodeURIComponent('0f83d323-c7b7-4f4f-88c4-feebc9fbab23')}/channels/@{encodeURIComponent('19:0ef995481b924089b81e7c1bb21a2ab7@thread.tacv2')}/messages"
                            }
                        }
                    },
                    "outputs": {}
                },
                "parameters": {
                    "$connections": {
                        "value": {
                            "teams": {
                                "connectionId": "[resourceId('Microsoft.Web/connections', 'msftTeamsConnectionAuth')]",
                                "connectionName": "teams",
                                "id": "[subscriptionResourceId('Microsoft.Web/locations/managedApis', parameters('location'), 'teams')]"
                            }
                        }
                    }
                }
            }
        },
        {
            "type": "Microsoft.Insights/metricalerts",
            "apiVersion": "2018-03-01",
            "name": "AlertOnSucceededPipeline",
            "location": "global",
            "dependsOn": [
                "[resourceId('microsoft.insights/actionGroups', variables('actionGroupsName'))]"
            ],
            "properties": {
                "description": "The Data is dumped successfully",
                "severity": 0,
                "enabled": true,
                "scopes": [
                    "[variables('factoryId')]"
                ],
                "evaluationFrequency": "PT1M",
                "windowSize": "PT1M",
                "criteria": {
                    "allOf": [
                        {
                            "threshold": 1,
                            "name": "37fdbd66-4a5e-44a5-8d46-964dbd36bb78",
                            "metricNamespace": "Microsoft.DataFactory/factories",
                            "metricName": "PipelineSucceededRuns",
                            "dimensions": [
                                {
                                    "name": "Name",
                                    "operator": "Include",
                                    "values": [
                                        "SynapseToBlobpipeline"
                                    ]
                                },
                                {
                                    "name": "FailureType",
                                    "operator": "Include",
                                    "values": [
                                        "none"
                                    ]
                                }
                            ],
                            "operator": "GreaterThanOrEqual",
                            "timeAggregation": "Total",
                            "criterionType": "StaticThresholdCriterion"
                        }
                    ],
                    "odata.type": "Microsoft.Azure.Monitor.SingleResourceMultipleMetricCriteria"
                },
                "targetResourceType": "microsoft.datafactory/factories",
                "actions": [
                    {
                        "actionGroupId": "[resourceId('microsoft.insights/actionGroups', variables('actionGroupsName'))]",
                        "webHookProperties": {}
                    }
                ]
            }
        }
    ]
}
